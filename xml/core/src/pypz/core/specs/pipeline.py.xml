<?xml-stylesheet type="text/xsl" href="../../../../../../mypy-html.xslt"?><mypy-report-file name="core\src\pypz\core\specs\pipeline.py" module="core.src.pypz.core.specs.pipeline"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="from typing import cast" number="16" precision="precise"/><line any_info="No Anys on this line!" content="" number="17" precision="empty"/><line any_info="No Anys on this line!" content="import yaml" number="18" precision="precise"/><line any_info="No Anys on this line!" content="" number="19" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.core.specs.dtos import PipelineInstanceDTO, PipelineSpecDTO" number="20" precision="any"/><line any_info="No Anys on this line!" content="from pypz.core.specs.instance import Instance, RegisteredInterface" number="21" precision="any"/><line any_info="No Anys on this line!" content="from pypz.core.specs.operator import Operator" number="22" precision="any"/><line any_info="No Anys on this line!" content="" number="23" precision="empty"/><line any_info="No Anys on this line!" content="" number="24" precision="empty"/><line any_info="No Anys on this line!" content="class Pipeline(Instance[Operator], RegisteredInterface):" number="25" precision="precise"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;" number="26" precision="empty"/><line any_info="No Anys on this line!" content="    This class represents the pipeline instance specs. A pipeline is actually a" number="27" precision="empty"/><line any_info="No Anys on this line!" content="    virtual organization of operators. It has a meaning only on pipeline level" number="28" precision="empty"/><line any_info="No Anys on this line!" content="    actions like deployment and execution. A pipeline spec can contain" number="29" precision="empty"/><line any_info="No Anys on this line!" content="    operators as nested instance." number="30" precision="empty"/><line any_info="No Anys on this line!" content="" number="31" precision="empty"/><line any_info="No Anys on this line!" content="    :param name: name of the instance, if not provided, it will be attempted to deduce from the variable's name" number="32" precision="empty"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;" number="33" precision="empty"/><line any_info="No Anys on this line!" content="" number="34" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    def __init__(self, name: str, *args, **kwargs):" number="35" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x2)" content="        super().__init__(name, Operator, *args, **kwargs)" number="36" precision="any"/><line any_info="No Anys on this line!" content="" number="37" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="    def get_dto(self) -&gt; PipelineInstanceDTO:" number="38" precision="any"/><line any_info="No Anys on this line!" content="        instance_dto = super().get_dto()" number="39" precision="precise"/><line any_info="No Anys on this line!" content="" number="40" precision="empty"/><line any_info="No Anys on this line!" content="        # Replicas must be excluded from the dto" number="41" precision="empty"/><line any_info="No Anys on this line!" content="        instance_dto.spec.nestedInstances = {" number="42" precision="precise"/><line any_info="No Anys on this line!" content="            operator.get_dto() for operator in self.get_protected().get_nested_instances().values()" number="43" precision="precise"/><line any_info="No Anys on this line!" content="            if operator.is_principal()" number="44" precision="precise"/><line any_info="No Anys on this line!" content="        }" number="45" precision="empty"/><line any_info="No Anys on this line!" content="" number="46" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        return PipelineInstanceDTO(name=instance_dto.name," number="47" precision="any"/><line any_info="No Anys on this line!" content="                                   parameters=instance_dto.parameters," number="48" precision="precise"/><line any_info="No Anys on this line!" content="                                   dependsOn=instance_dto.dependsOn," number="49" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                                   spec=PipelineSpecDTO(**instance_dto.spec.__dict__))" number="50" precision="any"/><line any_info="No Anys on this line!" content="" number="51" precision="empty"/><line any_info="No Anys on this line!" content="    @staticmethod" number="52" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    def create_from_string(source, *args, **kwargs) -&gt; 'Pipeline':" number="53" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)&#10;Unannotated (x7)&#10;Explicit (x2)" content="        return Pipeline.create_from_dto(PipelineInstanceDTO(**yaml.safe_load(source)), *args, **kwargs)" number="54" precision="any"/><line any_info="No Anys on this line!" content="" number="55" precision="empty"/><line any_info="No Anys on this line!" content="    @staticmethod" number="56" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x2)" content="    def create_from_dto(instance_dto: 'PipelineInstanceDTO', *args, **kwargs) -&gt; 'Pipeline':" number="57" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)&#10;Unannotated (x2)" content="        return cast(Pipeline, Instance.create_from_dto(instance_dto, *args, **kwargs))" number="58" precision="any"/><line any_info="No Anys on this line!" content="" number="59" precision="empty"/><line any_info="No Anys on this line!" content="    def _on_interrupt(self, system_signal: int = None) -&gt; None:" number="60" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="61" precision="precise"/><line any_info="No Anys on this line!" content="" number="62" precision="empty"/><line any_info="No Anys on this line!" content="    def _on_error(self) -&gt; None:" number="63" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="64" precision="precise"/></mypy-report-file>