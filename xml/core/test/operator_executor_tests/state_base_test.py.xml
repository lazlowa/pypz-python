<?xml-stylesheet type="text/xsl" href="../../../../mypy-html.xslt"?><mypy-report-file name="core\test\operator_executor_tests\state_base_test.py" module="core.test.operator_executor_tests.state_base_test"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.executors.commons import ExecutionMode" number="16" precision="any"/><line any_info="No Anys on this line!" content="from pypz.executors.operator.context import ExecutionContext" number="17" precision="any"/><line any_info="No Anys on this line!" content="from pypz.executors.operator.signals import SignalOperationStart, SignalOperationStop, SignalServicesStop, \" number="18" precision="any"/><line any_info="No Anys on this line!" content="    SignalServicesStart, SignalResourcesCreation, SignalResourcesDeletion, SignalOperationInit, SignalError, \" number="19" precision="empty"/><line any_info="No Anys on this line!" content="    SignalKill, SignalNoOp, SignalShutdown, SignalTerminate" number="20" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.executors.operator.states import State" number="21" precision="any"/><line any_info="No Anys on this line!" content="from pypz.core.specs.operator import Operator" number="22" precision="any"/><line any_info="No Anys on this line!" content="import pypz.core.commons.utils" number="23" precision="any"/><line any_info="No Anys on this line!" content="import unittest" number="24" precision="precise"/><line any_info="No Anys on this line!" content="" number="25" precision="empty"/><line any_info="No Anys on this line!" content="from core.test.operator_executor_tests.resources import TestPipeline" number="26" precision="precise"/><line any_info="No Anys on this line!" content="" number="27" precision="empty"/><line any_info="No Anys on this line!" content="" number="28" precision="empty"/><line any_info="No Anys on this line!" content="# ============= Resources =============" number="29" precision="empty"/><line any_info="No Anys on this line!" content="" number="30" precision="empty"/><line any_info="No Anys on this line!" content="" number="31" precision="empty"/><line any_info="No Anys on this line!" content="class TestState1(State):" number="32" precision="precise"/><line any_info="No Anys on this line!" content="" number="33" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="    def __init__(self, context: ExecutionContext," number="34" precision="any"/><line any_info="No Anys on this line!" content="                 executor_pool_size: int = None):" number="35" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="        super().__init__(context, executor_pool_size)" number="36" precision="any"/><line any_info="No Anys on this line!" content="" number="37" precision="empty"/><line any_info="No Anys on this line!" content="    def on_entry(self) -&gt; None:" number="38" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="39" precision="precise"/><line any_info="No Anys on this line!" content="" number="40" precision="empty"/><line any_info="No Anys on this line!" content="    def on_exit(self) -&gt; None:" number="41" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="42" precision="precise"/><line any_info="No Anys on this line!" content="" number="43" precision="empty"/><line any_info="No Anys on this line!" content="    def on_execute(self) -&gt; None:" number="44" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="45" precision="precise"/><line any_info="No Anys on this line!" content="" number="46" precision="empty"/><line any_info="No Anys on this line!" content="" number="47" precision="empty"/><line any_info="No Anys on this line!" content="class TestState2(State):" number="48" precision="precise"/><line any_info="No Anys on this line!" content="" number="49" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="    def __init__(self, context: ExecutionContext," number="50" precision="any"/><line any_info="No Anys on this line!" content="                 executor_pool_size: int = None):" number="51" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="        super().__init__(context, executor_pool_size)" number="52" precision="any"/><line any_info="No Anys on this line!" content="" number="53" precision="empty"/><line any_info="No Anys on this line!" content="    def on_entry(self) -&gt; None:" number="54" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="55" precision="precise"/><line any_info="No Anys on this line!" content="" number="56" precision="empty"/><line any_info="No Anys on this line!" content="    def on_exit(self) -&gt; None:" number="57" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="58" precision="precise"/><line any_info="No Anys on this line!" content="" number="59" precision="empty"/><line any_info="No Anys on this line!" content="    def on_execute(self) -&gt; None:" number="60" precision="precise"/><line any_info="No Anys on this line!" content="        pass" number="61" precision="precise"/><line any_info="No Anys on this line!" content="" number="62" precision="empty"/><line any_info="No Anys on this line!" content="# ============= Tests =============" number="63" precision="empty"/><line any_info="No Anys on this line!" content="" number="64" precision="empty"/><line any_info="No Anys on this line!" content="" number="65" precision="empty"/><line any_info="No Anys on this line!" content="class BaseStateTest(unittest.TestCase):" number="66" precision="precise"/><line any_info="No Anys on this line!" content="" number="67" precision="empty"/><line any_info="No Anys on this line!" content="    def test_state_action_callable_with_service_plugin_expect_success(self):" number="68" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="69" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x3)" content="        action_callable = State.MethodWrapper(TestState1(ExecutionContext(pipeline.operator_a," number="70" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)&#10;Unimported (x1)" content="                                                                          ExecutionMode.Standard))," number="71" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                                              pipeline.operator_a.service_plugin," number="72" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                                              pipeline.operator_a.service_plugin._on_service_start)" number="73" precision="any"/><line any_info="No Anys on this line!" content="" number="74" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertTrue(action_callable())" number="75" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.service_plugin.call_counter_interrupt)" number="76" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.service_plugin.call_counter_error)" number="77" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.service_plugin.call_counter_service_start)" number="78" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.service_plugin.call_counter_service_shutdown)" number="79" precision="any"/><line any_info="No Anys on this line!" content="" number="80" precision="empty"/><line any_info="No Anys on this line!" content="    def test_state_action_callable_with_operator_expect_success(self):" number="81" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="82" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x3)" content="        action_callable = State.MethodWrapper(TestState1(ExecutionContext(pipeline.operator_a," number="83" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)&#10;Unimported (x1)" content="                                                                          ExecutionMode.Standard))," number="84" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                                              pipeline.operator_a," number="85" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                                              pipeline.operator_a._on_running)" number="86" precision="any"/><line any_info="No Anys on this line!" content="" number="87" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertTrue(action_callable())" number="88" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.call_counter_interrupt)" number="89" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.call_counter_error)" number="90" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.call_counter_init)" number="91" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1, pipeline.operator_a.call_counter_running)" number="92" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.call_counter_shutdown)" number="93" precision="any"/><line any_info="No Anys on this line!" content="" number="94" precision="empty"/><line any_info="No Anys on this line!" content="    def test_state_action_callable_with_operator_with_error_raised_expect_error(self):" number="95" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="96" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;raise__on_running&quot;, &quot;Test Error&quot;)" number="97" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x3)" content="        action_callable = State.MethodWrapper(TestState1(ExecutionContext(pipeline.operator_a," number="98" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)&#10;Unimported (x1)" content="                                                                          ExecutionMode.Standard))," number="99" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                                              pipeline.operator_a," number="100" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                                              pipeline.operator_a._on_running)" number="101" precision="any"/><line any_info="No Anys on this line!" content="" number="102" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="103" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            action_callable()" number="104" precision="any"/><line any_info="No Anys on this line!" content="" number="105" precision="empty"/><line any_info="No Anys on this line!" content="    def test_transition_multi_registration_expect_error(self):" number="106" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="107" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="108" precision="any"/><line any_info="No Anys on this line!" content="" number="109" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state1 = TestState1(context)" number="110" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state2 = TestState2(context)" number="111" precision="any"/><line any_info="No Anys on this line!" content="" number="112" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalOperationStart, state2)" number="113" precision="any"/><line any_info="No Anys on this line!" content="" number="114" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="115" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="            state1.set_transition(SignalOperationStart, state2)" number="116" precision="any"/><line any_info="No Anys on this line!" content="" number="117" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state1.shutdown()" number="118" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state2.shutdown()" number="119" precision="any"/><line any_info="No Anys on this line!" content="" number="120" precision="empty"/><line any_info="No Anys on this line!" content="    def test_transition_handling_expect_success(self):" number="121" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="122" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="123" precision="any"/><line any_info="No Anys on this line!" content="" number="124" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state1 = TestState1(context)" number="125" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state2 = TestState2(context)" number="126" precision="any"/><line any_info="No Anys on this line!" content="" number="127" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalOperationStart, state2)" number="128" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalOperationStop, state2)" number="129" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalServicesStart, state2)" number="130" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalServicesStop, state2)" number="131" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalResourcesCreation, state2)" number="132" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalResourcesDeletion, state2)" number="133" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalOperationInit, state2)" number="134" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalError, state2)" number="135" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalKill, state2)" number="136" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalNoOp, state2)" number="137" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalShutdown, state2)" number="138" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        state1.set_transition(SignalTerminate, state2)" number="139" precision="any"/><line any_info="No Anys on this line!" content="" number="140" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12, len(state1.get_transitions()))" number="141" precision="any"/><line any_info="No Anys on this line!" content="" number="142" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalOperationStart()))" number="143" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalOperationStop()))" number="144" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalServicesStart()))" number="145" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalServicesStop()))" number="146" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalResourcesCreation()))" number="147" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalResourcesDeletion()))" number="148" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalOperationInit()))" number="149" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalError()))" number="150" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalKill()))" number="151" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalNoOp()))" number="152" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalShutdown()))" number="153" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state2, state1.on_signal_handling(SignalTerminate()))" number="154" precision="any"/><line any_info="No Anys on this line!" content="" number="155" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state1.shutdown()" number="156" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state2.shutdown()" number="157" precision="any"/><line any_info="No Anys on this line!" content="" number="158" precision="empty"/><line any_info="No Anys on this line!" content="    def test_unhandled_transition_expect_remaining_in_the_current_state(self):" number="159" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="160" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="161" precision="any"/><line any_info="No Anys on this line!" content="" number="162" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state1 = TestState1(context)" number="163" precision="any"/><line any_info="No Anys on this line!" content="" number="164" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalOperationStart()))" number="165" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalOperationStop()))" number="166" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalServicesStart()))" number="167" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalServicesStop()))" number="168" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalResourcesCreation()))" number="169" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalResourcesDeletion()))" number="170" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalOperationInit()))" number="171" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalError()))" number="172" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalKill()))" number="173" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalNoOp()))" number="174" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalShutdown()))" number="175" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        self.assertEqual(state1, state1.on_signal_handling(SignalTerminate()))" number="176" precision="any"/><line any_info="No Anys on this line!" content="" number="177" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state1.shutdown()" number="178" precision="any"/><line any_info="No Anys on this line!" content="" number="179" precision="empty"/><line any_info="No Anys on this line!" content="    def test_transition_handling_with_invalid_signal_type_expect_error(self):" number="180" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="181" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="182" precision="any"/><line any_info="No Anys on this line!" content="" number="183" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state1 = TestState1(context)" number="184" precision="any"/><line any_info="No Anys on this line!" content="" number="185" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="186" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x1)" content="            self.assertEqual(state1, state1.on_signal_handling(SignalOperationStart))" number="187" precision="any"/><line any_info="No Anys on this line!" content="" number="188" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="189" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertEqual(state1, state1.on_signal_handling(&quot;invalid_signal&quot;))" number="190" precision="any"/><line any_info="No Anys on this line!" content="" number="191" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state1.shutdown()" number="192" precision="any"/><line any_info="No Anys on this line!" content="" number="193" precision="empty"/><line any_info="No Anys on this line!" content="    def test_scheduler_with_return_true_expect_success(self):" number="194" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="195" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="196" precision="any"/><line any_info="No Anys on this line!" content="" number="197" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state = TestState1(context)" number="198" precision="any"/><line any_info="No Anys on this line!" content="" number="199" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x1)" content="        start_time = pypz.core.commons.utils.current_time_millis()" number="200" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)&#10;Unimported (x1)" content="        self.assertTrue(state._schedule((Operator._on_init, {pipeline.operator_a})))" number="201" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)&#10;Unimported (x1)" content="        self.assertTrue(1100 &gt; (pypz.core.commons.utils.current_time_millis() - start_time))" number="202" precision="any"/><line any_info="No Anys on this line!" content="" number="203" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state.shutdown()" number="204" precision="any"/><line any_info="No Anys on this line!" content="" number="205" precision="empty"/><line any_info="No Anys on this line!" content="    def test_scheduler_with_return_false_expect_success(self):" number="206" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="207" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="208" precision="any"/><line any_info="No Anys on this line!" content="" number="209" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state = TestState1(context)" number="210" precision="any"/><line any_info="No Anys on this line!" content="" number="211" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;return__on_init&quot;, False)" number="212" precision="any"/><line any_info="No Anys on this line!" content="" number="213" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x1)" content="        start_time = pypz.core.commons.utils.current_time_millis()" number="214" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)&#10;Unimported (x1)" content="        self.assertFalse(state._schedule((Operator._on_init, {pipeline.operator_a})))" number="215" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)&#10;Unimported (x1)" content="        self.assertTrue(1100 &gt; (pypz.core.commons.utils.current_time_millis() - start_time))" number="216" precision="any"/><line any_info="No Anys on this line!" content="" number="217" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state.shutdown()" number="218" precision="any"/><line any_info="No Anys on this line!" content="" number="219" precision="empty"/><line any_info="No Anys on this line!" content="    def test_scheduler_with_repeated_calls_expect_no_execution(self):" number="220" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="221" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="222" precision="any"/><line any_info="No Anys on this line!" content="" number="223" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state = TestState1(context)" number="224" precision="any"/><line any_info="No Anys on this line!" content="" number="225" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)&#10;Unimported (x1)" content="        self.assertTrue(state._schedule((Operator._on_init, {pipeline.operator_a})))" number="226" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)&#10;Unimported (x1)" content="        self.assertTrue(state._schedule((Operator._on_init, {pipeline.operator_a})))" number="227" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)&#10;Unimported (x1)" content="        self.assertTrue(state._schedule((Operator._on_init, {pipeline.operator_a})))" number="228" precision="any"/><line any_info="No Anys on this line!" content="" number="229" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state.shutdown()" number="230" precision="any"/><line any_info="No Anys on this line!" content="" number="231" precision="empty"/><line any_info="No Anys on this line!" content="    def test_scheduler_with_invalid_return_type_expect_fail(self):" number="232" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="233" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x2)" content="        context = ExecutionContext(pipeline.operator_a, ExecutionMode.Standard)" number="234" precision="any"/><line any_info="No Anys on this line!" content="" number="235" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="        state = TestState1(context)" number="236" precision="any"/><line any_info="No Anys on this line!" content="" number="237" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;return__on_init&quot;, None)" number="238" precision="any"/><line any_info="No Anys on this line!" content="" number="239" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(RuntimeError):" number="240" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x1)" content="            state._schedule((Operator._on_init, {pipeline.operator_a}))" number="241" precision="any"/><line any_info="No Anys on this line!" content="" number="242" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        state.shutdown()" number="243" precision="any"/></mypy-report-file>