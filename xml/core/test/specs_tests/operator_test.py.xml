<?xml-stylesheet type="text/xsl" href="../../../../mypy-html.xslt"?><mypy-report-file name="core\test\specs_tests\operator_test.py" module="core.test.specs_tests.operator_test"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="import unittest" number="16" precision="precise"/><line any_info="No Anys on this line!" content="from pypz.core.specs.dtos import OperatorInstanceDTO, OperatorConnection, OperatorConnectionSource" number="17" precision="any"/><line any_info="No Anys on this line!" content="from core.test.specs_tests.operator_test_resources import TestPipelineWithOperator, TestOperatorWithPortPlugins, \" number="18" precision="precise"/><line any_info="No Anys on this line!" content="    OperatorWithWrongLoggerPlugin" number="19" precision="empty"/><line any_info="No Anys on this line!" content="" number="20" precision="empty"/><line any_info="No Anys on this line!" content="" number="21" precision="empty"/><line any_info="No Anys on this line!" content="class OperatorInstanceTest(unittest.TestCase):" number="22" precision="precise"/><line any_info="No Anys on this line!" content="" number="23" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_dto_generation_with_connections_and_replication(self):" number="24" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="25" precision="any"/><line any_info="No Anys on this line!" content="" number="26" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator_a_dto = pipeline.operator_a.get_dto()" number="27" precision="any"/><line any_info="No Anys on this line!" content="" number="28" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(5, operator_a_dto.parameters[&quot;replicationFactor&quot;])" number="29" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x2)" content="        self.assertEqual([OperatorConnection(&quot;input_port&quot;, OperatorConnectionSource(&quot;operator_b&quot;, &quot;output_port&quot;))]," number="30" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                         operator_a_dto.connections)" number="31" precision="any"/><line any_info="No Anys on this line!" content="" number="32" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_with_valid_input_types(self):" number="33" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="34" precision="any"/><line any_info="No Anys on this line!" content="" number="35" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="36" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            pipeline.operator_a.update(&quot;{}&quot;)" number="37" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            pipeline.operator_a.update({})" number="38" precision="any"/><line any_info="No Anys on this line!" content="        except:  # noqa: E722" number="39" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.fail()" number="40" precision="any"/><line any_info="No Anys on this line!" content="" number="41" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_with_invalid_input_types(self):" number="42" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="43" precision="any"/><line any_info="No Anys on this line!" content="" number="44" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(TypeError):" number="45" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            pipeline.operator_a.update(0)" number="46" precision="any"/><line any_info="No Anys on this line!" content="" number="47" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(TypeError):" number="48" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            pipeline.operator_a.update(object())" number="49" precision="any"/><line any_info="No Anys on this line!" content="" number="50" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_with_valid_connections(self):" number="51" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="52" precision="any"/><line any_info="No Anys on this line!" content="" number="53" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="        operator_dto = OperatorInstanceDTO(" number="54" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x2)" content="            connections=[OperatorConnection(&quot;input_port&quot;, OperatorConnectionSource(&quot;operator_a&quot;, &quot;output_port&quot;))])" number="55" precision="any"/><line any_info="No Anys on this line!" content="" number="56" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_b.update(operator_dto)" number="57" precision="any"/><line any_info="No Anys on this line!" content="" number="58" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(1, len(pipeline.operator_b.input_port.get_connected_ports()))" number="59" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        self.assertTrue(pipeline.operator_a.output_port in pipeline.operator_b.input_port.get_connected_ports())" number="60" precision="any"/><line any_info="No Anys on this line!" content="" number="61" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_multiple_with_valid_connections_expect_no_change(self):" number="62" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="63" precision="any"/><line any_info="No Anys on this line!" content="" number="64" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="        operator_dto = OperatorInstanceDTO(" number="65" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x2)" content="            connections=[OperatorConnection(&quot;input_port&quot;, OperatorConnectionSource(&quot;operator_a&quot;, &quot;output_port&quot;))])" number="66" precision="any"/><line any_info="No Anys on this line!" content="" number="67" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_b.update(operator_dto)" number="68" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_b.update(operator_dto)" number="69" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_b.update(operator_dto)" number="70" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_b.update(operator_dto)" number="71" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_b.update(operator_dto)" number="72" precision="any"/><line any_info="No Anys on this line!" content="" number="73" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(1, len(pipeline.operator_b.input_port.get_connected_ports()))" number="74" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        self.assertTrue(pipeline.operator_a.output_port in pipeline.operator_b.input_port.get_connected_ports())" number="75" precision="any"/><line any_info="No Anys on this line!" content="" number="76" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_with_non_existing_input_port_expect_error(self):" number="77" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="78" precision="any"/><line any_info="No Anys on this line!" content="" number="79" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="        operator_dto = OperatorInstanceDTO(" number="80" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x2)" content="            connections=[OperatorConnection(&quot;non_existing&quot;, OperatorConnectionSource(&quot;operator_b&quot;, &quot;output_port&quot;))])" number="81" precision="any"/><line any_info="No Anys on this line!" content="" number="82" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="83" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            pipeline.operator_a.update(operator_dto)" number="84" precision="any"/><line any_info="No Anys on this line!" content="" number="85" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_with_non_existing_source_instance_expect_error(self):" number="86" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="87" precision="any"/><line any_info="No Anys on this line!" content="" number="88" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="        operator_dto = OperatorInstanceDTO(" number="89" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x2)" content="            connections=[OperatorConnection(&quot;input_port&quot;, OperatorConnectionSource(&quot;non_existing&quot;, &quot;output_port&quot;))])" number="90" precision="any"/><line any_info="No Anys on this line!" content="" number="91" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="92" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            pipeline.operator_a.update(operator_dto)" number="93" precision="any"/><line any_info="No Anys on this line!" content="" number="94" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_update_with_non_existing_output_port_expect_error(self):" number="95" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="96" precision="any"/><line any_info="No Anys on this line!" content="" number="97" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="        operator_dto = OperatorInstanceDTO(" number="98" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x2)" content="            connections=[OperatorConnection(&quot;input_port&quot;, OperatorConnectionSource(&quot;operator_b&quot;, &quot;non_existing&quot;))])" number="99" precision="any"/><line any_info="No Anys on this line!" content="" number="100" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(AttributeError):" number="101" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            pipeline.operator_a.update(operator_dto)" number="102" precision="any"/><line any_info="No Anys on this line!" content="" number="103" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_incremental_replication(self):" number="104" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="105" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(5, pipeline.operator_a.get_replication_factor())" number="106" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(6, pipeline.operator_a.get_group_size())" number="107" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(5, len(pipeline.operator_a.get_replicas()))" number="108" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(pipeline.operator_a, pipeline.operator_a.get_group_principal())" number="109" precision="any"/><line any_info="No Anys on this line!" content="" number="110" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;replicationFactor&quot;, 1)" number="111" precision="any"/><line any_info="No Anys on this line!" content="" number="112" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.get_replication_factor())" number="113" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(2, pipeline.operator_a.get_group_size())" number="114" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(1, len(pipeline.operator_a.get_replicas()))" number="115" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(pipeline.operator_a, pipeline.operator_a.get_group_principal())" number="116" precision="any"/><line any_info="No Anys on this line!" content="" number="117" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;replicationFactor&quot;, 5)" number="118" precision="any"/><line any_info="No Anys on this line!" content="" number="119" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(5, pipeline.operator_a.get_replication_factor())" number="120" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(6, pipeline.operator_a.get_group_size())" number="121" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(5, len(pipeline.operator_a.get_replicas()))" number="122" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(pipeline.operator_a, pipeline.operator_a.get_group_principal())" number="123" precision="any"/><line any_info="No Anys on this line!" content="" number="124" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;replicationFactor&quot;, 10)" number="125" precision="any"/><line any_info="No Anys on this line!" content="" number="126" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(10, pipeline.operator_a.get_replication_factor())" number="127" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(11, pipeline.operator_a.get_group_size())" number="128" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(10, len(pipeline.operator_a.get_replicas()))" number="129" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(pipeline.operator_a, pipeline.operator_a.get_group_principal())" number="130" precision="any"/><line any_info="No Anys on this line!" content="" number="131" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;replicationFactor&quot;, 0)" number="132" precision="any"/><line any_info="No Anys on this line!" content="" number="133" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_replication_factor())" number="134" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.get_group_size())" number="135" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(0, len(pipeline.operator_a.get_replicas()))" number="136" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertIsNone(pipeline.operator_a.get_group_principal())" number="137" precision="any"/><line any_info="No Anys on this line!" content="" number="138" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_basic_attributes(self):" number="139" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="140" precision="any"/><line any_info="No Anys on this line!" content="" number="141" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(5, pipeline.operator_a.get_replication_factor())" number="142" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(6, pipeline.operator_a.get_group_size())" number="143" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_group_index())" number="144" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(5, len(pipeline.operator_a.get_replicas()))" number="145" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(pipeline.operator_a, pipeline.operator_a.get_group_principal())" number="146" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        self.assertEqual(pipeline.operator_a.get_full_name(), pipeline.operator_a.get_group_name())" number="147" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertTrue(pipeline.operator_a.is_principal())" number="148" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(&quot;pipeline.operator_a&quot;, pipeline.operator_a.get_full_name())" number="149" precision="any"/><line any_info="No Anys on this line!" content="" number="150" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(6, pipeline.operator_a.output_port.get_group_size())" number="151" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(0, pipeline.operator_a.output_port.get_group_index())" number="152" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        self.assertEqual(pipeline.operator_a.output_port, pipeline.operator_a.output_port.get_group_principal())" number="153" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(pipeline.operator_a.output_port.get_full_name()," number="154" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                         pipeline.operator_a.output_port.get_group_name())" number="155" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertTrue(pipeline.operator_a.output_port.is_principal())" number="156" precision="any"/><line any_info="No Anys on this line!" content="" number="157" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(6, pipeline.operator_a.input_port.get_group_size())" number="158" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(0, pipeline.operator_a.input_port.get_group_index())" number="159" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        self.assertEqual(pipeline.operator_a.input_port, pipeline.operator_a.input_port.get_group_principal())" number="160" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertEqual(pipeline.operator_a.input_port.get_full_name()," number="161" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                         pipeline.operator_a.input_port.get_group_name())" number="162" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        self.assertTrue(pipeline.operator_a.input_port.is_principal())" number="163" precision="any"/><line any_info="No Anys on this line!" content="" number="164" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="165" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="166" precision="any"/><line any_info="No Anys on this line!" content="" number="167" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertEqual(6, replica.get_group_size())" number="168" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica_idx+1, replica.get_group_index())" number="169" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(pipeline.operator_a, replica.get_group_principal())" number="170" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(pipeline.operator_a.get_full_name(), replica.get_group_name())" number="171" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(replica.is_principal())" number="172" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(f&quot;pipeline.operator_a_{replica_idx}&quot;, replica.get_full_name())" number="173" precision="any"/><line any_info="No Anys on this line!" content="" number="174" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertEqual(6, replica.output_port.get_group_size())" number="175" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(replica_idx+1, replica.output_port.get_group_index())" number="176" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(pipeline.operator_a.output_port, replica.output_port.get_group_principal())" number="177" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            self.assertEqual(pipeline.operator_a.output_port.get_full_name(), replica.output_port.get_group_name())" number="178" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(replica.output_port.is_principal())" number="179" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            self.assertEqual(f&quot;pipeline.operator_a_{replica_idx}.output_port&quot;, replica.output_port.get_full_name())" number="180" precision="any"/><line any_info="No Anys on this line!" content="" number="181" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertEqual(6, replica.input_port.get_group_size())" number="182" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(replica_idx+1, replica.input_port.get_group_index())" number="183" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(pipeline.operator_a.input_port, replica.input_port.get_group_principal())" number="184" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            self.assertEqual(pipeline.operator_a.input_port.get_full_name(), replica.input_port.get_group_name())" number="185" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(replica.input_port.is_principal())" number="186" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            self.assertEqual(f&quot;pipeline.operator_a_{replica_idx}.input_port&quot;, replica.input_port.get_full_name())" number="187" precision="any"/><line any_info="No Anys on this line!" content="" number="188" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_direct_set_parameter_attribute_expect_equality(self):" number="189" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="190" precision="any"/><line any_info="No Anys on this line!" content="" number="191" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_a)" number="192" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_b)" number="193" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_c)" number="194" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_d)" number="195" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_e)" number="196" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_a&quot;))" number="197" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_b&quot;))" number="198" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_c&quot;))" number="199" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_d&quot;))" number="200" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_e&quot;))" number="201" precision="any"/><line any_info="No Anys on this line!" content="" number="202" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="203" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="204" precision="any"/><line any_info="No Anys on this line!" content="" number="205" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_a, pipeline.operator_a.param_a)" number="206" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_b, pipeline.operator_a.param_b)" number="207" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_c, pipeline.operator_a.param_c)" number="208" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_d, pipeline.operator_a.param_d)" number="209" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_e, pipeline.operator_a.param_e)" number="210" precision="any"/><line any_info="No Anys on this line!" content="" number="211" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertIs(pipeline.operator_a.get_protected().get_parameters()," number="212" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                          replica.get_protected().get_parameters())" number="213" precision="any"/><line any_info="No Anys on this line!" content="" number="214" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        pipeline.operator_a.param_a = 1" number="215" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        pipeline.operator_a.param_b = 12" number="216" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        pipeline.operator_a.param_c = 123" number="217" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        pipeline.operator_a.param_d = 1234" number="218" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        pipeline.operator_a.param_e = 12345" number="219" precision="any"/><line any_info="No Anys on this line!" content="" number="220" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1, pipeline.operator_a.param_a)" number="221" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12, pipeline.operator_a.param_b)" number="222" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(123, pipeline.operator_a.param_c)" number="223" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1234, pipeline.operator_a.param_d)" number="224" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12345, pipeline.operator_a.param_e)" number="225" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.get_parameter(&quot;param_a&quot;))" number="226" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12, pipeline.operator_a.get_parameter(&quot;param_b&quot;))" number="227" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(123, pipeline.operator_a.get_parameter(&quot;param_c&quot;))" number="228" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1234, pipeline.operator_a.get_parameter(&quot;param_d&quot;))" number="229" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12345, pipeline.operator_a.get_parameter(&quot;param_e&quot;))" number="230" precision="any"/><line any_info="No Anys on this line!" content="" number="231" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="232" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="233" precision="any"/><line any_info="No Anys on this line!" content="" number="234" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_a, pipeline.operator_a.param_a)" number="235" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_b, pipeline.operator_a.param_b)" number="236" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_c, pipeline.operator_a.param_c)" number="237" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_d, pipeline.operator_a.param_d)" number="238" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_e, pipeline.operator_a.param_e)" number="239" precision="any"/><line any_info="No Anys on this line!" content="" number="240" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertIs(pipeline.operator_a.get_protected().get_parameters()," number="241" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                          replica.get_protected().get_parameters())" number="242" precision="any"/><line any_info="No Anys on this line!" content="" number="243" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_a.get_replica(0).param_a = 12345" number="244" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_a.get_replica(0).param_b = 1234" number="245" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_a.get_replica(0).param_c = 123" number="246" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_a.get_replica(0).param_d = 12" number="247" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        pipeline.operator_a.get_replica(0).param_e = 1" number="248" precision="any"/><line any_info="No Anys on this line!" content="" number="249" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12345, pipeline.operator_a.param_a)" number="250" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1234, pipeline.operator_a.param_b)" number="251" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(123, pipeline.operator_a.param_c)" number="252" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12, pipeline.operator_a.param_d)" number="253" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1, pipeline.operator_a.param_e)" number="254" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12345, pipeline.operator_a.get_parameter(&quot;param_a&quot;))" number="255" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1234, pipeline.operator_a.get_parameter(&quot;param_b&quot;))" number="256" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(123, pipeline.operator_a.get_parameter(&quot;param_c&quot;))" number="257" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12, pipeline.operator_a.get_parameter(&quot;param_d&quot;))" number="258" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.get_parameter(&quot;param_e&quot;))" number="259" precision="any"/><line any_info="No Anys on this line!" content="" number="260" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="261" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="262" precision="any"/><line any_info="No Anys on this line!" content="" number="263" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_a, pipeline.operator_a.param_a)" number="264" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_b, pipeline.operator_a.param_b)" number="265" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_c, pipeline.operator_a.param_c)" number="266" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_d, pipeline.operator_a.param_d)" number="267" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_e, pipeline.operator_a.param_e)" number="268" precision="any"/><line any_info="No Anys on this line!" content="" number="269" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertIs(pipeline.operator_a.get_protected().get_parameters()," number="270" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                          replica.get_protected().get_parameters())" number="271" precision="any"/><line any_info="No Anys on this line!" content="" number="272" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_indirect_set_parameter_attribute_expect_equality(self):" number="273" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="274" precision="any"/><line any_info="No Anys on this line!" content="" number="275" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_a)" number="276" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_b)" number="277" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_c)" number="278" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_d)" number="279" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(0, pipeline.operator_a.param_e)" number="280" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_a&quot;))" number="281" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_b&quot;))" number="282" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_c&quot;))" number="283" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_d&quot;))" number="284" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(0, pipeline.operator_a.get_parameter(&quot;param_e&quot;))" number="285" precision="any"/><line any_info="No Anys on this line!" content="" number="286" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="287" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="288" precision="any"/><line any_info="No Anys on this line!" content="" number="289" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_a, pipeline.operator_a.param_a)" number="290" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_b, pipeline.operator_a.param_b)" number="291" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_c, pipeline.operator_a.param_c)" number="292" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_d, pipeline.operator_a.param_d)" number="293" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_e, pipeline.operator_a.param_e)" number="294" precision="any"/><line any_info="No Anys on this line!" content="" number="295" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertIs(pipeline.operator_a.get_protected().get_parameters()," number="296" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                          replica.get_protected().get_parameters())" number="297" precision="any"/><line any_info="No Anys on this line!" content="" number="298" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;param_a&quot;, 1)" number="299" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;param_b&quot;, 12)" number="300" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;param_c&quot;, 123)" number="301" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;param_d&quot;, 1234)" number="302" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.operator_a.set_parameter(&quot;param_e&quot;, 12345)" number="303" precision="any"/><line any_info="No Anys on this line!" content="" number="304" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1, pipeline.operator_a.param_a)" number="305" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12, pipeline.operator_a.param_b)" number="306" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(123, pipeline.operator_a.param_c)" number="307" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1234, pipeline.operator_a.param_d)" number="308" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12345, pipeline.operator_a.param_e)" number="309" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.get_parameter(&quot;param_a&quot;))" number="310" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12, pipeline.operator_a.get_parameter(&quot;param_b&quot;))" number="311" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(123, pipeline.operator_a.get_parameter(&quot;param_c&quot;))" number="312" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1234, pipeline.operator_a.get_parameter(&quot;param_d&quot;))" number="313" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12345, pipeline.operator_a.get_parameter(&quot;param_e&quot;))" number="314" precision="any"/><line any_info="No Anys on this line!" content="" number="315" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="316" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="317" precision="any"/><line any_info="No Anys on this line!" content="" number="318" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_a, pipeline.operator_a.param_a)" number="319" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_b, pipeline.operator_a.param_b)" number="320" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_c, pipeline.operator_a.param_c)" number="321" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_d, pipeline.operator_a.param_d)" number="322" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_e, pipeline.operator_a.param_e)" number="323" precision="any"/><line any_info="No Anys on this line!" content="" number="324" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertIs(pipeline.operator_a.get_protected().get_parameters()," number="325" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                          replica.get_protected().get_parameters())" number="326" precision="any"/><line any_info="No Anys on this line!" content="" number="327" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        pipeline.operator_a.get_replica(0).set_parameter(&quot;param_a&quot;, 12345)" number="328" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        pipeline.operator_a.get_replica(0).set_parameter(&quot;param_b&quot;, 1234)" number="329" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        pipeline.operator_a.get_replica(0).set_parameter(&quot;param_c&quot;, 123)" number="330" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        pipeline.operator_a.get_replica(0).set_parameter(&quot;param_d&quot;, 12)" number="331" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        pipeline.operator_a.get_replica(0).set_parameter(&quot;param_e&quot;, 1)" number="332" precision="any"/><line any_info="No Anys on this line!" content="" number="333" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12345, pipeline.operator_a.param_a)" number="334" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1234, pipeline.operator_a.param_b)" number="335" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(123, pipeline.operator_a.param_c)" number="336" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(12, pipeline.operator_a.param_d)" number="337" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(1, pipeline.operator_a.param_e)" number="338" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12345, pipeline.operator_a.get_parameter(&quot;param_a&quot;))" number="339" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1234, pipeline.operator_a.get_parameter(&quot;param_b&quot;))" number="340" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(123, pipeline.operator_a.get_parameter(&quot;param_c&quot;))" number="341" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(12, pipeline.operator_a.get_parameter(&quot;param_d&quot;))" number="342" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(1, pipeline.operator_a.get_parameter(&quot;param_e&quot;))" number="343" precision="any"/><line any_info="No Anys on this line!" content="" number="344" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        for replica_idx in range(pipeline.operator_a.get_replication_factor()):" number="345" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            replica = pipeline.operator_a.get_replica(replica_idx)" number="346" precision="any"/><line any_info="No Anys on this line!" content="" number="347" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_a, pipeline.operator_a.param_a)" number="348" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_b, pipeline.operator_a.param_b)" number="349" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_c, pipeline.operator_a.param_c)" number="350" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_d, pipeline.operator_a.param_d)" number="351" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(replica.param_e, pipeline.operator_a.param_e)" number="352" precision="any"/><line any_info="No Anys on this line!" content="" number="353" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertIs(pipeline.operator_a.get_protected().get_parameters()," number="354" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                          replica.get_protected().get_parameters())" number="355" precision="any"/><line any_info="No Anys on this line!" content="" number="356" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_basic_attributes_without_pipeline_context(self):" number="357" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator = TestOperatorWithPortPlugins(&quot;operator&quot;)" number="358" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.set_parameter(&quot;replicationFactor&quot;, 5)" number="359" precision="any"/><line any_info="No Anys on this line!" content="" number="360" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(5, operator.get_replication_factor())" number="361" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(5, len(operator.get_replicas()))" number="362" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(operator, operator.get_group_principal())" number="363" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertEqual(operator.get_simple_name(), operator.get_group_name())" number="364" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertTrue(operator.is_principal())" number="365" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(&quot;operator&quot;, operator.get_full_name())" number="366" precision="any"/><line any_info="No Anys on this line!" content="" number="367" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        for replica_idx in range(operator.get_replication_factor()):" number="368" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            replica = operator.get_replica(replica_idx)" number="369" precision="any"/><line any_info="No Anys on this line!" content="" number="370" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertEqual(operator, replica.get_group_principal())" number="371" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(operator.get_simple_name(), replica.get_group_name())" number="372" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(replica.is_principal())" number="373" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(f&quot;operator_{replica_idx}&quot;, replica.get_full_name())" number="374" precision="any"/><line any_info="No Anys on this line!" content="" number="375" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_replica_equality_without_updates(self):" number="376" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator = TestOperatorWithPortPlugins(&quot;operator&quot;, 5)" number="377" precision="any"/><line any_info="No Anys on this line!" content="" number="378" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for replica in operator.get_replicas():" number="379" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertEqual(5, replica.get_replication_factor())" number="380" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator), id(replica.get_group_principal()))" number="381" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertEqual(0, len(replica.get_replicas()))" number="382" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.get_context()), id(replica.get_context()))" number="383" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(operator.get_protected().get_nested_instances()," number="384" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                             replica.get_protected().get_nested_instances())" number="385" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x12)" content="            self.assertEqual(operator.get_protected().get_parameters(), replica.get_protected().get_parameters())" number="386" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x12)" content="            self.assertEqual(operator.get_protected().get_depends_on(), replica.get_protected().get_depends_on())" number="387" precision="any"/><line any_info="No Anys on this line!" content="" number="388" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_replica_equality_with_updates_on_origin(self):" number="389" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator = TestOperatorWithPortPlugins(&quot;operator&quot;, 1)" number="390" precision="any"/><line any_info="No Anys on this line!" content="" number="391" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.set_parameter(&quot;param&quot;, &quot;value&quot;)" number="392" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.output_port.depends_on(operator.input_port)" number="393" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator.input_port.set_parameter(&quot;param&quot;, &quot;value&quot;)" number="394" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator.output_port.set_parameter(&quot;req_str&quot;, &quot;val&quot;)" number="395" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator.output_port.set_parameter(&quot;_opt_str&quot;, &quot;val&quot;)" number="396" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator.output_port.set_parameter(&quot;req_int&quot;, 4321)" number="397" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator.output_port.set_parameter(&quot;_opt_int&quot;, 4321)" number="398" precision="any"/><line any_info="No Anys on this line!" content="" number="399" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for replica in operator.get_replicas():" number="400" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(operator.get_protected().get_nested_instances()," number="401" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                             replica.get_protected().get_nested_instances())" number="402" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_parameters())," number="403" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_parameters()))" number="404" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_depends_on())," number="405" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_depends_on()))" number="406" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_parameters())," number="407" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_parameters()))" number="408" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_depends_on())," number="409" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_depends_on()))" number="410" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_parameters())," number="411" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_parameters()))" number="412" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_depends_on())," number="413" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_depends_on()))" number="414" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_str), id(replica.output_port.req_str))" number="415" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_str), id(replica.output_port._opt_str))" number="416" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_int), id(replica.output_port.req_int))" number="417" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_int), id(replica.output_port._opt_int))" number="418" precision="any"/><line any_info="No Anys on this line!" content="" number="419" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_replica_equality_with_updates_on_replica(self):" number="420" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator = TestOperatorWithPortPlugins(&quot;operator&quot;)" number="421" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.set_parameter(&quot;replicationFactor&quot;, 1)" number="422" precision="any"/><line any_info="No Anys on this line!" content="" number="423" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator.get_replica(0).set_parameter(&quot;param&quot;, &quot;value&quot;)" number="424" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        operator.get_replica(0).output_port.depends_on(operator.get_replica(0).input_port)" number="425" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.get_replica(0).input_port.set_parameter(&quot;param&quot;, &quot;value&quot;)" number="426" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.get_replica(0).output_port.set_parameter(&quot;req_str&quot;, &quot;val&quot;)" number="427" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.get_replica(0).output_port.set_parameter(&quot;_opt_str&quot;, &quot;val&quot;)" number="428" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.get_replica(0).output_port.set_parameter(&quot;req_int&quot;, 4321)" number="429" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.get_replica(0).output_port.set_parameter(&quot;_opt_int&quot;, 4321)" number="430" precision="any"/><line any_info="No Anys on this line!" content="" number="431" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for replica in operator.get_replicas():" number="432" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(operator.get_protected().get_nested_instances()," number="433" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                             replica.get_protected().get_nested_instances())" number="434" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_parameters())," number="435" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_parameters()))" number="436" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_depends_on())," number="437" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_depends_on()))" number="438" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_parameters())," number="439" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_parameters()))" number="440" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_depends_on())," number="441" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_depends_on()))" number="442" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_parameters())," number="443" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_parameters()))" number="444" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_depends_on())," number="445" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_depends_on()))" number="446" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_str), id(replica.output_port.req_str))" number="447" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_str), id(replica.output_port._opt_str))" number="448" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_int), id(replica.output_port.req_int))" number="449" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_int), id(replica.output_port._opt_int))" number="450" precision="any"/><line any_info="No Anys on this line!" content="" number="451" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_replica_equality_with_direct_parameter_update_on_origin(self):" number="452" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator = TestOperatorWithPortPlugins(&quot;operator&quot;, 1)" number="453" precision="any"/><line any_info="No Anys on this line!" content="" number="454" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.set_parameter(&quot;param&quot;, &quot;value&quot;)" number="455" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.output_port.depends_on(operator.input_port)" number="456" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator.input_port.set_parameter(&quot;param&quot;, &quot;value&quot;)" number="457" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.output_port.req_str = &quot;val&quot;" number="458" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.output_port._opt_str = &quot;val&quot;" number="459" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.output_port.req_int = 4321" number="460" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.output_port._opt_int = 4321" number="461" precision="any"/><line any_info="No Anys on this line!" content="" number="462" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for replica in operator.get_replicas():" number="463" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(operator.get_protected().get_nested_instances()," number="464" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                             replica.get_protected().get_nested_instances())" number="465" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_parameters())," number="466" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_parameters()))" number="467" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_depends_on())," number="468" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_depends_on()))" number="469" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_parameters())," number="470" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_parameters()))" number="471" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_depends_on())," number="472" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_depends_on()))" number="473" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_parameters())," number="474" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_parameters()))" number="475" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_depends_on())," number="476" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_depends_on()))" number="477" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_str), id(replica.output_port.req_str))" number="478" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_str), id(replica.output_port._opt_str))" number="479" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_int), id(replica.output_port.req_int))" number="480" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_int), id(replica.output_port._opt_int))" number="481" precision="any"/><line any_info="No Anys on this line!" content="" number="482" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_replica_equality_with_direct_parameter_update_on_replica(self):" number="483" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        operator = TestOperatorWithPortPlugins(&quot;operator&quot;)" number="484" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        operator.set_parameter(&quot;replicationFactor&quot;, 1)" number="485" precision="any"/><line any_info="No Anys on this line!" content="" number="486" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator.get_replica(0).set_parameter(&quot;param&quot;, &quot;value&quot;)" number="487" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="        operator.get_replica(0).output_port.depends_on(operator.get_replica(0).input_port)" number="488" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        operator.get_replica(0).input_port.set_parameter(&quot;param&quot;, &quot;value&quot;)" number="489" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator.get_replica(0).output_port.req_str = &quot;val&quot;" number="490" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator.get_replica(0).output_port._opt_str = &quot;val&quot;" number="491" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator.get_replica(0).output_port.req_int = 4321" number="492" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        operator.get_replica(0).output_port._opt_int = 4321" number="493" precision="any"/><line any_info="No Anys on this line!" content="" number="494" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for replica in operator.get_replicas():" number="495" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            self.assertEqual(operator.get_protected().get_nested_instances()," number="496" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                             replica.get_protected().get_nested_instances())" number="497" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_parameters())," number="498" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_parameters()))" number="499" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="            self.assertEqual(id(operator.get_protected().get_depends_on())," number="500" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                             id(replica.get_protected().get_depends_on()))" number="501" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_parameters())," number="502" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_parameters()))" number="503" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.output_port.get_protected().get_depends_on())," number="504" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.output_port.get_protected().get_depends_on()))" number="505" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_parameters())," number="506" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_parameters()))" number="507" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertEqual(id(operator.input_port.get_protected().get_depends_on())," number="508" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                             id(replica.input_port.get_protected().get_depends_on()))" number="509" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_str), id(replica.output_port.req_str))" number="510" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_str), id(replica.output_port._opt_str))" number="511" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port.req_int), id(replica.output_port.req_int))" number="512" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x10)" content="            self.assertEqual(id(operator.output_port._opt_int), id(replica.output_port._opt_int))" number="513" precision="any"/><line any_info="No Anys on this line!" content="" number="514" precision="empty"/><line any_info="No Anys on this line!" content="    def test_operator_replication_with_negative_factor_expect_error(self):" number="515" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(ValueError):" number="516" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            TestOperatorWithPortPlugins(&quot;operator&quot;).set_parameter(&quot;replicationFactor&quot;, -1)" number="517" precision="any"/><line any_info="No Anys on this line!" content="" number="518" precision="empty"/><line any_info="No Anys on this line!" content="    def test_logger_invocation_with_recursive_context_expect_error(self):" number="519" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        operator = OperatorWithWrongLoggerPlugin(&quot;operator&quot;)" number="520" precision="any"/><line any_info="No Anys on this line!" content="" number="521" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(RecursionError):" number="522" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            operator.get_logger().info(&quot;This would introduce an endless recursion&quot;)" number="523" precision="any"/><line any_info="No Anys on this line!" content="" number="524" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(RecursionError):" number="525" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            operator.get_logger().debug(&quot;This would introduce an endless recursion&quot;)" number="526" precision="any"/><line any_info="No Anys on this line!" content="" number="527" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(RecursionError):" number="528" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            operator.get_logger().warn(&quot;This would introduce an endless recursion&quot;)" number="529" precision="any"/><line any_info="No Anys on this line!" content="" number="530" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(RecursionError):" number="531" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            operator.get_logger().error(&quot;This would introduce an endless recursion&quot;)" number="532" precision="any"/><line any_info="No Anys on this line!" content="" number="533" precision="empty"/><line any_info="No Anys on this line!" content="    def test_get_dto_with_replicas_expect_ignored_replicas_in_dto(self):" number="534" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipelineWithOperator(&quot;pipeline&quot;)" number="535" precision="any"/><line any_info="No Anys on this line!" content="" number="536" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        dto = pipeline.get_dto()" number="537" precision="any"/><line any_info="No Anys on this line!" content="" number="538" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        self.assertEqual(2, len(dto.spec.nestedInstances))" number="539" precision="any"/><line any_info="No Anys on this line!" content="" number="540" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for nested_instance in dto.spec.nestedInstances:" number="541" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            self.assertTrue((&quot;operator_a&quot; == nested_instance.name) or (&quot;operator_b&quot; == nested_instance.name))" number="542" precision="any"/></mypy-report-file>