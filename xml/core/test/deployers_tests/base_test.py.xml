<?xml-stylesheet type="text/xsl" href="../../../../mypy-html.xslt"?><mypy-report-file name="core\test\deployers_tests\base_test.py" module="core.test.deployers_tests.base_test"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="import unittest" number="16" precision="precise"/><line any_info="No Anys on this line!" content="" number="17" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.core.specs.operator import Operator" number="18" precision="any"/><line any_info="No Anys on this line!" content="from pypz.deployers.base import DeploymentState" number="19" precision="any"/><line any_info="No Anys on this line!" content="from core.test.deployers_tests.resources import TestPipeline, TestDeployer" number="20" precision="precise"/><line any_info="No Anys on this line!" content="" number="21" precision="empty"/><line any_info="No Anys on this line!" content="" number="22" precision="empty"/><line any_info="No Anys on this line!" content="class DeployerTest(unittest.TestCase):" number="23" precision="precise"/><line any_info="No Anys on this line!" content="" number="24" precision="empty"/><line any_info="No Anys on this line!" content="    def test_deployer_is_all_operator_in_state_all(self):" number="25" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="26" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        deployer = TestDeployer()" number="27" precision="any"/><line any_info="No Anys on this line!" content="" number="28" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        deployer.deploy(pipeline)" number="29" precision="any"/><line any_info="No Anys on this line!" content="" number="30" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertTrue(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Running))" number="31" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertTrue(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Running," number="32" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)&#10;Unimported (x1)" content="                                                          DeploymentState.Open))" number="33" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertFalse(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Open))" number="34" precision="any"/><line any_info="No Anys on this line!" content="" number="35" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        deployer.deployed_operators[pipeline.operator_a.get_full_name()] = DeploymentState.Unknown" number="36" precision="any"/><line any_info="No Anys on this line!" content="" number="37" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertFalse(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Running))" number="38" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertFalse(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Running," number="39" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)&#10;Unimported (x1)" content="                                                           DeploymentState.Open))" number="40" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertFalse(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Open))" number="41" precision="any"/><line any_info="No Anys on this line!" content="" number="42" precision="empty"/><line any_info="No Anys on this line!" content="    def test_deployer_is_any_operator_in_state(self):" number="43" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="44" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        deployer = TestDeployer()" number="45" precision="any"/><line any_info="No Anys on this line!" content="" number="46" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        deployer.deploy(pipeline)" number="47" precision="any"/><line any_info="No Anys on this line!" content="" number="48" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertTrue(deployer.is_any_operator_in_state(pipeline.get_full_name(), DeploymentState.Running))" number="49" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        self.assertTrue(deployer.is_any_operator_in_state(pipeline.get_full_name()," number="50" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x2)" content="                                                          DeploymentState.Running, DeploymentState.Open))" number="51" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertFalse(deployer.is_any_operator_in_state(pipeline.get_full_name(), DeploymentState.Open))" number="52" precision="any"/><line any_info="No Anys on this line!" content="" number="53" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x1)" content="        deployer.deployed_operators[pipeline.operator_a.get_full_name()] = DeploymentState.Open" number="54" precision="any"/><line any_info="No Anys on this line!" content="" number="55" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertTrue(deployer.is_any_operator_in_state(pipeline.get_full_name(), DeploymentState.Open))" number="56" precision="any"/><line any_info="No Anys on this line!" content="" number="57" precision="empty"/><line any_info="No Anys on this line!" content="    def test_deployer_attach_with_all_running(self):" number="58" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="59" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        deployer = TestDeployer()" number="60" precision="any"/><line any_info="No Anys on this line!" content="" number="61" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        def on_operator_state_change(operator: Operator, state: DeploymentState):" number="62" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="            if DeploymentState.Running == state:" number="63" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x5)&#10;Unannotated (x2)" content="                deployer.deployed_operators[operator.get_full_name()] = DeploymentState.Completed" number="64" precision="any"/><line any_info="No Anys on this line!" content="" number="65" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        deployer.deploy(pipeline)" number="66" precision="any"/><line any_info="No Anys on this line!" content="" number="67" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)&#10;Unimported (x2)" content="        deployer.attach(pipeline.get_full_name(), on_operator_state_change)" number="68" precision="any"/><line any_info="No Anys on this line!" content="" number="69" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x9)&#10;Unimported (x1)" content="        self.assertTrue(deployer.is_all_operator_in_state(pipeline.get_full_name(), DeploymentState.Completed))" number="70" precision="any"/></mypy-report-file>