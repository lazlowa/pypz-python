<?xml-stylesheet type="text/xsl" href="../../../../../mypy-html.xslt"?><mypy-report-file name="sniffer\src\pypz\sniffer\sniffer.py" module="sniffer.src.pypz.sniffer.sniffer"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="import uuid" number="16" precision="precise"/><line any_info="No Anys on this line!" content="from threading import Thread" number="17" precision="precise"/><line any_info="No Anys on this line!" content="from typing import Callable, Optional" number="18" precision="precise"/><line any_info="No Anys on this line!" content="" number="19" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.core.commons.utils import SynchronizedReference" number="20" precision="any"/><line any_info="No Anys on this line!" content="" number="21" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.abstracts.channel_ports import ChannelInputPort, ChannelOutputPort" number="22" precision="any"/><line any_info="No Anys on this line!" content="from pypz.core.channels.status import ChannelStatusMessage" number="23" precision="any"/><line any_info="No Anys on this line!" content="from pypz.core.specs.misc import BlankOutputPortPlugin, BlankInputPortPlugin" number="24" precision="any"/><line any_info="No Anys on this line!" content="from pypz.core.specs.pipeline import Pipeline" number="25" precision="any"/><line any_info="No Anys on this line!" content="" number="26" precision="empty"/><line any_info="No Anys on this line!" content="" number="27" precision="empty"/><line any_info="No Anys on this line!" content="class ChannelSniffer:" number="28" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="    def __init__(self, input_port: ChannelInputPort, output_port: ChannelOutputPort):" number="29" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="        self.channel_name = input_port.get_full_name() \" number="30" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            if input_port.get_group_principal() is None \" number="31" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="            else input_port.get_group_principal().get_full_name()" number="32" precision="any"/><line any_info="No Anys on this line!" content="" number="33" precision="empty"/><line any_info="No Anys on this line!" content="        context_uuid = uuid.uuid4()" number="34" precision="precise"/><line any_info="No Anys on this line!" content="" number="35" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="        self.reader_sniffer = output_port.channel_writer_type(self.channel_name," number="36" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                                                              BlankOutputPortPlugin(f&quot;reader_{context_uuid}&quot;)," number="37" precision="any"/><line any_info="No Anys on this line!" content="                                                              silent_mode=True)" number="38" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x6)" content="        self.reader_sniffer.set_location(input_port.get_parameter(&quot;channelLocation&quot;))" number="39" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)&#10;Unannotated (x1)" content="        self.reader_sniffer.on_status_message_received(self.on_status_message)" number="40" precision="any"/><line any_info="No Anys on this line!" content="" number="41" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="        self.writer_sniffer = input_port.channel_reader_type(self.channel_name," number="42" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                                                             BlankInputPortPlugin(f&quot;writer_{context_uuid}&quot;)," number="43" precision="any"/><line any_info="No Anys on this line!" content="                                                             silent_mode=True)" number="44" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x6)" content="        self.writer_sniffer.set_location(input_port.get_parameter(&quot;channelLocation&quot;))" number="45" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)&#10;Unannotated (x1)" content="        self.writer_sniffer.on_status_message_received(self.on_status_message)" number="46" precision="any"/><line any_info="No Anys on this line!" content="" number="47" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        self.on_status_update_callbacks: dict[str, Callable[[ChannelStatusMessage], None]] = dict()" number="48" precision="precise"/><line any_info="No Anys on this line!" content="" number="49" precision="empty"/><line any_info="No Anys on this line!" content="    def open(self):" number="50" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        return ((self.reader_sniffer.is_channel_open() or self.reader_sniffer.invoke_open_channel()) and" number="51" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                (self.writer_sniffer.is_channel_open() or self.writer_sniffer.invoke_open_channel()))" number="52" precision="any"/><line any_info="No Anys on this line!" content="" number="53" precision="empty"/><line any_info="No Anys on this line!" content="    def close(self):" number="54" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="        return ((not self.reader_sniffer.is_channel_open() or self.reader_sniffer.invoke_close_channel()) and" number="55" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                (not self.writer_sniffer.is_channel_open() or self.writer_sniffer.invoke_close_channel()))" number="56" precision="any"/><line any_info="No Anys on this line!" content="" number="57" precision="empty"/><line any_info="No Anys on this line!" content="    def sniff(self):" number="58" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        self.writer_sniffer.invoke_sync_status_update()" number="59" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        self.reader_sniffer.invoke_sync_status_update()" number="60" precision="any"/><line any_info="No Anys on this line!" content="" number="61" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="    def subscribe(self, channel_context_name, callback: Callable[[ChannelStatusMessage], None]):" number="62" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        self.on_status_update_callbacks[channel_context_name] = callback" number="63" precision="any"/><line any_info="No Anys on this line!" content="" number="64" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x1)" content="    def on_status_message(self, status_messages: list[ChannelStatusMessage]):" number="65" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        for status_message in status_messages:" number="66" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            if status_message.channel_context_name in self.on_status_update_callbacks:" number="67" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="                self.on_status_update_callbacks[status_message.channel_context_name](status_message)" number="68" precision="any"/><line any_info="No Anys on this line!" content="" number="69" precision="empty"/><line any_info="No Anys on this line!" content="" number="70" precision="empty"/><line any_info="No Anys on this line!" content="class PipelineSniffer:" number="71" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="    def __init__(self, pipeline: Pipeline):" number="72" precision="any"/><line any_info="No Anys on this line!" content="        self.channel_sniffers: dict[str, ChannelSniffer] = dict()" number="73" precision="precise"/><line any_info="No Anys on this line!" content="" number="74" precision="empty"/><line any_info="No Anys on this line!" content="        self.control_thread: Optional[Thread] = None" number="75" precision="precise"/><line any_info="No Anys on this line!" content="" number="76" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="        self.all_opened: SynchronizedReference[bool] = SynchronizedReference(False)" number="77" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="        self.all_closed: SynchronizedReference[bool] = SynchronizedReference(False)" number="78" precision="any"/><line any_info="No Anys on this line!" content="" number="79" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x8)" content="        for operator in pipeline.get_protected().get_nested_instances().values():" number="80" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            if operator.is_principal():" number="81" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x8)" content="                for input_port in operator.get_protected().get_nested_instances().values():" number="82" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                    if isinstance(input_port, ChannelInputPort):" number="83" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="                        for output_port in input_port.get_connected_ports():" number="84" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                            if isinstance(output_port, ChannelOutputPort):" number="85" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="                                channel_id = PipelineSniffer.get_channel_id(input_port, output_port)" number="86" precision="any"/><line any_info="No Anys on this line!" content="                                if channel_id in self.channel_sniffers:" number="87" precision="precise"/><line any_info="No Anys on this line!" content="                                    raise AttributeError(f&quot;Channel id already existing: {channel_id}&quot;)" number="88" precision="precise"/><line any_info="No Anys on this line!" content="" number="89" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="                                self.channel_sniffers[channel_id] = ChannelSniffer(input_port, output_port)" number="90" precision="any"/><line any_info="No Anys on this line!" content="" number="91" precision="empty"/><line any_info="No Anys on this line!" content="    @staticmethod" number="92" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="    def get_channel_id(input_port: ChannelInputPort, output_port: ChannelOutputPort) -&gt; str:" number="93" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        principal_input_port = input_port \" number="94" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x6)" content="            if input_port.get_group_principal() is None else input_port.get_group_principal()" number="95" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        principal_output_port = output_port \" number="96" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x6)" content="            if output_port.get_group_principal() is None else output_port.get_group_principal()" number="97" precision="any"/><line any_info="No Anys on this line!" content="" number="98" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x6)" content="        return f&quot;{principal_input_port.get_full_name()}+{principal_output_port.get_full_name()}&quot;" number="99" precision="any"/><line any_info="No Anys on this line!" content="" number="100" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="    def get_channel_sniffer_by_port(self, input_port: ChannelInputPort, output_port: ChannelOutputPort):" number="101" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="        return self.channel_sniffers[PipelineSniffer.get_channel_id(input_port, output_port)]" number="102" precision="any"/><line any_info="No Anys on this line!" content="" number="103" precision="empty"/><line any_info="No Anys on this line!" content="    def _start(self):" number="104" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        all_opened = True" number="105" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for channel_sniffer in self.channel_sniffers.values():" number="106" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            if not channel_sniffer.open():" number="107" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                all_opened = False" number="108" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.all_opened.set(all_opened)" number="109" precision="any"/><line any_info="No Anys on this line!" content="" number="110" precision="empty"/><line any_info="No Anys on this line!" content="    def _stop(self):" number="111" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        all_closed = True" number="112" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        for channel_sniffer in self.channel_sniffers.values():" number="113" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            if not channel_sniffer.close():" number="114" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                all_closed = False" number="115" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.all_closed.set(all_closed)" number="116" precision="any"/><line any_info="No Anys on this line!" content="" number="117" precision="empty"/><line any_info="No Anys on this line!" content="    def start(self) -&gt; bool:" number="118" precision="precise"/><line any_info="No Anys on this line!" content="        if (self.control_thread is not None) and (not self.control_thread.is_alive()):" number="119" precision="precise"/><line any_info="No Anys on this line!" content="            self.control_thread = None" number="120" precision="precise"/><line any_info="No Anys on this line!" content="" number="121" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        if (self.control_thread is None) and (not self.all_opened.get()):" number="122" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x4)&#10;Unannotated (x1)" content="            self.control_thread = Thread(target=self._start)" number="123" precision="imprecise"/><line any_info="No Anys on this line!" content="            self.control_thread.start()" number="124" precision="precise"/><line any_info="No Anys on this line!" content="" number="125" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        return self.all_opened.get()" number="126" precision="any"/><line any_info="No Anys on this line!" content="" number="127" precision="empty"/><line any_info="No Anys on this line!" content="    def stop(self) -&gt; bool:" number="128" precision="precise"/><line any_info="No Anys on this line!" content="        if (self.control_thread is not None) and (not self.control_thread.is_alive()):" number="129" precision="precise"/><line any_info="No Anys on this line!" content="            self.control_thread = None" number="130" precision="precise"/><line any_info="No Anys on this line!" content="" number="131" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        if (self.control_thread is None) and (not self.all_closed.get()):" number="132" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x4)&#10;Unannotated (x1)" content="            self.control_thread = Thread(target=self._stop)" number="133" precision="imprecise"/><line any_info="No Anys on this line!" content="            self.control_thread.start()" number="134" precision="precise"/><line any_info="No Anys on this line!" content="" number="135" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        return self.all_closed.get()" number="136" precision="any"/></mypy-report-file>