<?xml-stylesheet type="text/xsl" href="../../../../mypy-html.xslt"?><mypy-report-file name="plugins\kafka_io\test\kafka_io_port_test.py" module="plugins.kafka_io.test.kafka_io_port_test"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="import time" number="16" precision="precise"/><line any_info="No Anys on this line!" content="import unittest" number="17" precision="precise"/><line any_info="No Anys on this line!" content="" number="18" precision="empty"/><line any_info="No Anys on this line!" content="from kafka import KafkaAdminClient" number="19" precision="any"/><line any_info="No Anys on this line!" content="from kafka.errors import UnknownTopicOrPartitionError" number="20" precision="any"/><line any_info="No Anys on this line!" content="" number="21" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.plugins.kafka_io.channels import ReaderStatusTopicNameExtension, WriterStatusTopicNameExtension" number="22" precision="any"/><line any_info="No Anys on this line!" content="from plugins.kafka_io.test.resources import TestPipeline" number="23" precision="precise"/><line any_info="No Anys on this line!" content="" number="24" precision="empty"/><line any_info="No Anys on this line!" content="" number="25" precision="empty"/><line any_info="No Anys on this line!" content="class KafkaIOPortTest(unittest.TestCase):" number="26" precision="precise"/><line any_info="No Anys on this line!" content="" number="27" precision="empty"/><line any_info="No Anys on this line!" content="    bootstrap_url = &quot;localhost:9092&quot;" number="28" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="    test_admin_client: KafkaAdminClient" number="29" precision="any"/><line any_info="No Anys on this line!" content="    test_channel_name = &quot;pipeline.reader.input_port&quot;" number="30" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="    test_reader_status_name = test_channel_name + ReaderStatusTopicNameExtension" number="31" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="    test_writer_status_name = test_channel_name + WriterStatusTopicNameExtension" number="32" precision="any"/><line any_info="No Anys on this line!" content="" number="33" precision="empty"/><line any_info="No Anys on this line!" content="    @classmethod" number="34" precision="empty"/><line any_info="No Anys on this line!" content="    def setUpClass(cls) -&gt; None:" number="35" precision="precise"/><line any_info="No Anys on this line!" content="        time.sleep(2)" number="36" precision="precise"/><line any_info="No Anys on this line!" content="" number="37" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="        cls.test_admin_client: KafkaAdminClient = KafkaAdminClient(bootstrap_servers=KafkaIOPortTest.bootstrap_url)" number="38" precision="any"/><line any_info="No Anys on this line!" content="" number="39" precision="empty"/><line any_info="No Anys on this line!" content="    @classmethod" number="40" precision="empty"/><line any_info="No Anys on this line!" content="    def tearDownClass(cls) -&gt; None:" number="41" precision="precise"/><line any_info="No Anys on this line!" content="        try:" number="42" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            cls.test_admin_client.delete_topics([" number="43" precision="any"/><line any_info="No Anys on this line!" content="                cls.test_channel_name," number="44" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="                cls.test_writer_status_name," number="45" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="                cls.test_reader_status_name" number="46" precision="any"/><line any_info="No Anys on this line!" content="            ])" number="47" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="        except UnknownTopicOrPartitionError:" number="48" precision="any"/><line any_info="No Anys on this line!" content="            pass" number="49" precision="precise"/><line any_info="No Anys on this line!" content="" number="50" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        cls.test_admin_client.close()" number="51" precision="any"/><line any_info="No Anys on this line!" content="" number="52" precision="empty"/><line any_info="No Anys on this line!" content="    def setUp(self) -&gt; None:" number="53" precision="precise"/><line any_info="No Anys on this line!" content="        try:" number="54" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            KafkaIOPortTest.test_admin_client.delete_topics([" number="55" precision="any"/><line any_info="No Anys on this line!" content="                KafkaIOPortTest.test_channel_name," number="56" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="                KafkaIOPortTest.test_writer_status_name," number="57" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="                KafkaIOPortTest.test_reader_status_name" number="58" precision="any"/><line any_info="No Anys on this line!" content="            ])" number="59" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="        except UnknownTopicOrPartitionError:" number="60" precision="any"/><line any_info="No Anys on this line!" content="            pass" number="61" precision="precise"/><line any_info="No Anys on this line!" content="" number="62" precision="empty"/><line any_info="No Anys on this line!" content="    def test_almost_everything(self):" number="63" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="64" precision="empty"/><line any_info="No Anys on this line!" content="        This test method attempts to test as many things as it can. Although it is very" number="65" precision="empty"/><line any_info="No Anys on this line!" content="        well known that test cases shall be separated, setting up the context takes" number="66" precision="empty"/><line any_info="No Anys on this line!" content="        quite long time, hence we set up once and test different cases. The explanation" number="67" precision="empty"/><line any_info="No Anys on this line!" content="        of the cases can be found in the code." number="68" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="69" precision="empty"/><line any_info="No Anys on this line!" content="" number="70" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="71" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.set_parameter(&quot;##channelLocation&quot;, KafkaIOPortTest.bootstrap_url)" number="72" precision="any"/><line any_info="No Anys on this line!" content="" number="73" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        reader = pipeline.reader" number="74" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        reader_0 = pipeline.reader.get_replica(0)" number="75" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        writer = pipeline.writer" number="76" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        writer_0 = pipeline.writer.get_replica(0)" number="77" precision="any"/><line any_info="No Anys on this line!" content="" number="78" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="79" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._pre_execution()" number="80" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port._pre_execution()" number="81" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.output_port._pre_execution()" number="82" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.output_port._pre_execution()" number="83" precision="any"/><line any_info="No Anys on this line!" content="" number="84" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_resource_creation())" number="85" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_resource_creation())" number="86" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_resource_creation())" number="87" precision="any"/><line any_info="No Anys on this line!" content="" number="88" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #1" number="89" precision="empty"/><line any_info="No Anys on this line!" content="            # Writer and replica reader channels cannot open, until" number="90" precision="empty"/><line any_info="No Anys on this line!" content="            # resources are not created. Resource us created by the" number="91" precision="empty"/><line any_info="No Anys on this line!" content="            # principal reader instance, hence expect False." number="92" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(writer.output_port._on_port_open())" number="93" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(writer_0.output_port._on_port_open())" number="94" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader_0.input_port._on_port_open())" number="95" precision="any"/><line any_info="No Anys on this line!" content="" number="96" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_resource_creation())" number="97" precision="any"/><line any_info="No Anys on this line!" content="" number="98" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            time.sleep(1)" number="99" precision="any"/><line any_info="No Anys on this line!" content="" number="100" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #2" number="101" precision="empty"/><line any_info="No Anys on this line!" content="            # Principal reader instance cannot open, until at least" number="102" precision="empty"/><line any_info="No Anys on this line!" content="            # one writer is not connected. If the parameter" number="103" precision="empty"/><line any_info="No Anys on this line!" content="            # '_sync_connections_open' is set to True, then the" number="104" precision="empty"/><line any_info="No Anys on this line!" content="            # principal reader shall wait for all writers." number="105" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader.input_port._on_port_open())" number="106" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader_0.input_port._on_port_open())" number="107" precision="any"/><line any_info="No Anys on this line!" content="" number="108" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #3" number="109" precision="empty"/><line any_info="No Anys on this line!" content="            # All resources created and all channels are opened," number="110" precision="empty"/><line any_info="No Anys on this line!" content="            # hence principal reader can open as well." number="111" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_port_open())" number="112" precision="any"/><line any_info="No Anys on this line!" content="" number="113" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            time.sleep(1)" number="114" precision="any"/><line any_info="No Anys on this line!" content="" number="115" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_port_open())" number="116" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_port_open())" number="117" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_port_open())" number="118" precision="any"/><line any_info="No Anys on this line!" content="" number="119" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            reader._on_init()" number="120" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            reader_0._on_init()" number="121" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            writer._on_init()" number="122" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            writer_0._on_init()" number="123" precision="any"/><line any_info="No Anys on this line!" content="" number="124" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #4" number="125" precision="empty"/><line any_info="No Anys on this line!" content="            # On invoking on_running, we expect writer and reader to" number="126" precision="empty"/><line any_info="No Anys on this line!" content="            # return True, since those are not yet finished." number="127" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(writer._on_running())" number="128" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(writer_0._on_running())" number="129" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(reader._on_running())" number="130" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(reader_0._on_running())" number="131" precision="any"/><line any_info="No Anys on this line!" content="" number="132" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;record_0&quot;}], reader.received_records)" number="133" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertEqual([], reader_0.received_records)" number="134" precision="any"/><line any_info="No Anys on this line!" content="" number="135" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port.commit_current_read_offset()" number="136" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port.commit_current_read_offset()" number="137" precision="any"/><line any_info="No Anys on this line!" content="" number="138" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #5" number="139" precision="empty"/><line any_info="No Anys on this line!" content="            # Since each writer writes 2 records, after the second" number="140" precision="empty"/><line any_info="No Anys on this line!" content="            # invocation expect True i.e., the writers finished." number="141" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertTrue(writer._on_running())" number="142" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertTrue(writer_0._on_running())" number="143" precision="any"/><line any_info="No Anys on this line!" content="" number="144" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #6" number="145" precision="empty"/><line any_info="No Anys on this line!" content="            # Since the writers are not yet closed, the method can_retrieve" number="146" precision="empty"/><line any_info="No Anys on this line!" content="            # of the readers will return True, hence the on_running will" number="147" precision="empty"/><line any_info="No Anys on this line!" content="            # return False." number="148" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(reader._on_running())" number="149" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertFalse(reader_0._on_running())" number="150" precision="any"/><line any_info="No Anys on this line!" content="" number="151" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;record_0&quot;}, {&quot;demoText&quot;: &quot;record_0&quot;}], reader.received_records)" number="152" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;record_1&quot;}], reader_0.received_records)" number="153" precision="any"/><line any_info="No Anys on this line!" content="" number="154" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port.commit_current_read_offset()" number="155" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port.commit_current_read_offset()" number="156" precision="any"/><line any_info="No Anys on this line!" content="" number="157" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #7" number="158" precision="empty"/><line any_info="No Anys on this line!" content="            # Expect false, since outputs not yet closed" number="159" precision="empty"/><line any_info="No Anys on this line!" content="            # Notice that this does not apply to replica" number="160" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader.input_port._on_port_close())" number="161" precision="any"/><line any_info="No Anys on this line!" content="" number="162" precision="empty"/><line any_info="No Anys on this line!" content="            # Expect True, since closing writers has no dependencies" number="163" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            writer._on_shutdown()" number="164" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_port_close())" number="165" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_port_close())" number="166" precision="any"/><line any_info="No Anys on this line!" content="" number="167" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #8" number="168" precision="empty"/><line any_info="No Anys on this line!" content="            # Outputs closed, so can_retrieve shall return False -&gt; expect True" number="169" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertTrue(reader._on_running())" number="170" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            self.assertTrue(reader_0._on_running())" number="171" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;record_0&quot;}, {&quot;demoText&quot;: &quot;record_0&quot;}], reader.received_records)" number="172" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;record_1&quot;}, {&quot;demoText&quot;: &quot;record_1&quot;}], reader_0.received_records)" number="173" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            reader._on_shutdown()" number="174" precision="any"/><line any_info="No Anys on this line!" content="" number="175" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #9" number="176" precision="empty"/><line any_info="No Anys on this line!" content="            # Principal reader cannot close until replica reader is not closed" number="177" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader.input_port._on_port_close())" number="178" precision="any"/><line any_info="No Anys on this line!" content="" number="179" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_port_close())" number="180" precision="any"/><line any_info="No Anys on this line!" content="" number="181" precision="empty"/><line any_info="No Anys on this line!" content="            # Waiting 1 sec to allow propagation through Kafka" number="182" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            time.sleep(1)" number="183" precision="any"/><line any_info="No Anys on this line!" content="" number="184" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #10" number="185" precision="empty"/><line any_info="No Anys on this line!" content="            # Expect true, since replica and readers are closed" number="186" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_port_close())" number="187" precision="any"/><line any_info="No Anys on this line!" content="" number="188" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_resource_deletion())" number="189" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_resource_deletion())" number="190" precision="any"/><line any_info="No Anys on this line!" content="" number="191" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #11" number="192" precision="empty"/><line any_info="No Anys on this line!" content="            # Replica readers cannot delete resources" number="193" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_resource_deletion())" number="194" precision="any"/><line any_info="No Anys on this line!" content="" number="195" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = KafkaIOPortTest.test_admin_client.list_topics()" number="196" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertIn(KafkaIOPortTest.test_channel_name, existing_topics)" number="197" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertIn(KafkaIOPortTest.test_writer_status_name, existing_topics)" number="198" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertIn(KafkaIOPortTest.test_reader_status_name, existing_topics)" number="199" precision="any"/><line any_info="No Anys on this line!" content="" number="200" precision="empty"/><line any_info="No Anys on this line!" content="            # Case #12" number="201" precision="empty"/><line any_info="No Anys on this line!" content="            # In normal circumstances principal reader shall delete resources" number="202" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            reader.input_port._error_occurred = False" number="203" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_resource_deletion())" number="204" precision="any"/><line any_info="No Anys on this line!" content="" number="205" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = KafkaIOPortTest.test_admin_client.list_topics()" number="206" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertNotIn(KafkaIOPortTest.test_channel_name, existing_topics)" number="207" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertNotIn(KafkaIOPortTest.test_writer_status_name, existing_topics)" number="208" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertNotIn(KafkaIOPortTest.test_reader_status_name, existing_topics)" number="209" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        except Exception as e:" number="210" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.output_port._on_port_close()" number="211" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.output_port._on_port_close()" number="212" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port._on_port_close()" number="213" precision="any"/><line any_info="No Anys on this line!" content="" number="214" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            while not reader.input_port._on_port_close():" number="215" precision="any"/><line any_info="No Anys on this line!" content="                pass" number="216" precision="any"/><line any_info="No Anys on this line!" content="" number="217" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_resource_deletion()" number="218" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port._on_resource_deletion()" number="219" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            self.fail(e)" number="220" precision="any"/><line any_info="No Anys on this line!" content="" number="221" precision="empty"/><line any_info="No Anys on this line!" content="    def test_reader_delete_resources_with_error_occurred_expect_no_resource_deletion(self):" number="222" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="223" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.set_parameter(&quot;##channelLocation&quot;, KafkaIOPortTest.bootstrap_url)" number="224" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        reader = pipeline.reader" number="225" precision="any"/><line any_info="No Anys on this line!" content="" number="226" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="227" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._pre_execution()" number="228" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_resource_creation()" number="229" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_port_open()" number="230" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_error()" number="231" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_resource_deletion()" number="232" precision="any"/><line any_info="No Anys on this line!" content="" number="233" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = KafkaIOPortTest.test_admin_client.list_topics()" number="234" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertIn(KafkaIOPortTest.test_channel_name, existing_topics)" number="235" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertIn(KafkaIOPortTest.test_writer_status_name, existing_topics)" number="236" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self.assertIn(KafkaIOPortTest.test_reader_status_name, existing_topics)" number="237" precision="any"/><line any_info="No Anys on this line!" content="        except:  # noqa: E722" number="238" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.fail()" number="239" precision="any"/><line any_info="No Anys on this line!" content="        finally:" number="240" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_port_close()" number="241" precision="any"/><line any_info="No Anys on this line!" content="" number="242" precision="empty"/><line any_info="No Anys on this line!" content="    def test_reader_waits_until_all_writer_inited(self):" number="243" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="244" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.set_parameter(&quot;##channelLocation&quot;, KafkaIOPortTest.bootstrap_url)" number="245" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.reader.input_port._sync_connections_open = True" number="246" precision="any"/><line any_info="No Anys on this line!" content="" number="247" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        reader = pipeline.reader" number="248" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        reader_0 = pipeline.reader.get_replica(0)" number="249" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        writer = pipeline.writer" number="250" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        writer_0 = pipeline.writer.get_replica(0)" number="251" precision="any"/><line any_info="No Anys on this line!" content="" number="252" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="253" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._pre_execution()" number="254" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port._pre_execution()" number="255" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.output_port._pre_execution()" number="256" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.output_port._pre_execution()" number="257" precision="any"/><line any_info="No Anys on this line!" content="" number="258" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_resource_creation())" number="259" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_resource_creation())" number="260" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_resource_creation())" number="261" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_resource_creation())" number="262" precision="any"/><line any_info="No Anys on this line!" content="" number="263" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader.input_port._on_port_open())" number="264" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_port_open())" number="265" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertFalse(reader.input_port._on_port_open())" number="266" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_port_open())" number="267" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_port_open())" number="268" precision="any"/><line any_info="No Anys on this line!" content="" number="269" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_port_open())" number="270" precision="any"/><line any_info="No Anys on this line!" content="" number="271" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_port_close())" number="272" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_port_close())" number="273" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_port_close())" number="274" precision="any"/><line any_info="No Anys on this line!" content="" number="275" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            while not reader.input_port._on_port_close():" number="276" precision="any"/><line any_info="No Anys on this line!" content="                pass" number="277" precision="any"/><line any_info="No Anys on this line!" content="" number="278" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.output_port._on_resource_deletion())" number="279" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.output_port._on_resource_deletion())" number="280" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.input_port._on_resource_deletion())" number="281" precision="any"/><line any_info="No Anys on this line!" content="" number="282" precision="empty"/><line any_info="No Anys on this line!" content="            # Waiting 1 sec to allow propagation through Kafka" number="283" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            time.sleep(1)" number="284" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.input_port._on_resource_deletion())" number="285" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        except Exception as e:" number="286" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.output_port._on_port_close()" number="287" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.output_port._on_port_close()" number="288" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port._on_port_close()" number="289" precision="any"/><line any_info="No Anys on this line!" content="" number="290" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            while not reader.input_port._on_port_close():" number="291" precision="any"/><line any_info="No Anys on this line!" content="                pass" number="292" precision="any"/><line any_info="No Anys on this line!" content="" number="293" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.input_port._on_resource_deletion()" number="294" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.input_port._on_resource_deletion()" number="295" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            self.fail(e)" number="296" precision="any"/><line any_info="No Anys on this line!" content="" number="297" precision="empty"/><line any_info="No Anys on this line!" content="    def test_writer_sends_record_to_reader_group_expect_all_reader_got_the_same_record(self):" number="298" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline = TestPipeline(&quot;pipeline&quot;)" number="299" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        pipeline.set_parameter(&quot;##channelLocation&quot;, KafkaIOPortTest.bootstrap_url)" number="300" precision="any"/><line any_info="No Anys on this line!" content="" number="301" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        reader = pipeline.reader" number="302" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        reader_0 = pipeline.reader.get_replica(0)" number="303" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        writer = pipeline.writer" number="304" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        writer_0 = pipeline.writer.get_replica(0)" number="305" precision="any"/><line any_info="No Anys on this line!" content="" number="306" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="307" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.group_input_port._pre_execution()" number="308" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.group_input_port._pre_execution()" number="309" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.group_output_port._pre_execution()" number="310" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.group_output_port._pre_execution()" number="311" precision="any"/><line any_info="No Anys on this line!" content="" number="312" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.group_input_port._on_resource_creation())" number="313" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.group_input_port._on_resource_creation())" number="314" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.group_output_port._on_resource_creation())" number="315" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.group_output_port._on_resource_creation())" number="316" precision="any"/><line any_info="No Anys on this line!" content="" number="317" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer.group_output_port._on_port_open())" number="318" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(writer_0.group_output_port._on_port_open())" number="319" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader.group_input_port._on_port_open())" number="320" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            self.assertTrue(reader_0.group_input_port._on_port_open())" number="321" precision="any"/><line any_info="No Anys on this line!" content="" number="322" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.group_output_port.send([{&quot;demoText&quot;: &quot;from_writer_for_all&quot;}])" number="323" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            time.sleep(1)" number="324" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.group_output_port.send([{&quot;demoText&quot;: &quot;from_writer_0_for_all&quot;}])" number="325" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            time.sleep(1)" number="326" precision="any"/><line any_info="No Anys on this line!" content="" number="327" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;from_writer_for_all&quot;}]," number="328" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                             reader.group_input_port.retrieve())" number="329" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;from_writer_0_for_all&quot;}]," number="330" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                             reader.group_input_port.retrieve())" number="331" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;from_writer_for_all&quot;}]," number="332" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                             reader_0.group_input_port.retrieve())" number="333" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.assertEqual([{&quot;demoText&quot;: &quot;from_writer_0_for_all&quot;}]," number="334" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                             reader_0.group_input_port.retrieve())" number="335" precision="any"/><line any_info="No Anys on this line!" content="" number="336" precision="empty"/><line any_info="No Anys on this line!" content="        finally:" number="337" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer.group_output_port._on_port_close()" number="338" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            writer_0.group_output_port._on_port_close()" number="339" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.group_input_port._on_port_close()" number="340" precision="any"/><line any_info="No Anys on this line!" content="" number="341" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            while not reader.group_input_port._on_port_close():" number="342" precision="any"/><line any_info="No Anys on this line!" content="                pass" number="343" precision="any"/><line any_info="No Anys on this line!" content="" number="344" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader.group_input_port._on_resource_deletion()" number="345" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            reader_0.group_input_port._on_resource_deletion()" number="346" precision="any"/></mypy-report-file>