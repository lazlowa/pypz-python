<?xml-stylesheet type="text/xsl" href="../../../../../../../mypy-html.xslt"?><mypy-report-file name="plugins\kafka_io\src\pypz\plugins\kafka_io\channels.py" module="plugins.kafka_io.src.pypz.plugins.kafka_io.channels"><line any_info="No Anys on this line!" content="# =============================================================================" number="1" precision="empty"/><line any_info="No Anys on this line!" content="# Copyright (c) 2024 by Laszlo Anka. All rights reserved." number="2" precision="empty"/><line any_info="No Anys on this line!" content="#" number="3" precision="empty"/><line any_info="No Anys on this line!" content="# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);" number="4" precision="empty"/><line any_info="No Anys on this line!" content="# you may not use this file except in compliance with the License." number="5" precision="empty"/><line any_info="No Anys on this line!" content="# You may obtain a copy of the License at" number="6" precision="empty"/><line any_info="No Anys on this line!" content="#" number="7" precision="empty"/><line any_info="No Anys on this line!" content="#     http://www.apache.org/licenses/LICENSE-2.0" number="8" precision="empty"/><line any_info="No Anys on this line!" content="#" number="9" precision="empty"/><line any_info="No Anys on this line!" content="# Unless required by applicable law or agreed to in writing, software" number="10" precision="empty"/><line any_info="No Anys on this line!" content="# distributed under the License is distributed on an &quot;AS IS&quot; BASIS," number="11" precision="empty"/><line any_info="No Anys on this line!" content="# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." number="12" precision="empty"/><line any_info="No Anys on this line!" content="# See the License for the specific language governing permissions and" number="13" precision="empty"/><line any_info="No Anys on this line!" content="# limitations under the License." number="14" precision="empty"/><line any_info="No Anys on this line!" content="# =============================================================================" number="15" precision="empty"/><line any_info="No Anys on this line!" content="import concurrent.futures" number="16" precision="precise"/><line any_info="No Anys on this line!" content="from typing import Optional, Any, TYPE_CHECKING" number="17" precision="precise"/><line any_info="No Anys on this line!" content="" number="18" precision="empty"/><line any_info="No Anys on this line!" content="from kafka.errors import NoBrokersAvailable, NodeNotReadyError" number="19" precision="any"/><line any_info="No Anys on this line!" content="" number="20" precision="empty"/><line any_info="No Anys on this line!" content="from pypz.core.channels.io import ChannelWriter, ChannelReader" number="21" precision="any"/><line any_info="No Anys on this line!" content="" number="22" precision="empty"/><line any_info="No Anys on this line!" content="from kafka.consumer.fetcher import ConsumerRecord" number="23" precision="any"/><line any_info="No Anys on this line!" content="from kafka.coordinator.assignors.roundrobin import RoundRobinPartitionAssignor" number="24" precision="any"/><line any_info="No Anys on this line!" content="from kafka import KafkaProducer, KafkaConsumer, KafkaAdminClient, TopicPartition, OffsetAndMetadata" number="25" precision="any"/><line any_info="No Anys on this line!" content="from kafka.admin import NewTopic" number="26" precision="any"/><line any_info="No Anys on this line!" content="" number="27" precision="empty"/><line any_info="No Anys on this line!" content="from avro.io import DatumReader, BinaryDecoder, DatumWriter, BinaryEncoder, AvroTypeException" number="28" precision="any"/><line any_info="No Anys on this line!" content="from avro.schema import parse" number="29" precision="any"/><line any_info="No Anys on this line!" content="import io" number="30" precision="precise"/><line any_info="No Anys on this line!" content="from avro_validator.schema import Schema" number="31" precision="any"/><line any_info="No Anys on this line!" content="" number="32" precision="empty"/><line any_info="No Anys on this line!" content="if TYPE_CHECKING:" number="33" precision="precise"/><line any_info="No Anys on this line!" content="    from pypz.core.specs.plugin import InputPortPlugin, OutputPortPlugin" number="34" precision="any"/><line any_info="No Anys on this line!" content="" number="35" precision="empty"/><line any_info="No Anys on this line!" content="" number="36" precision="empty"/><line any_info="No Anys on this line!" content="WriterStatusTopicNameExtension = &quot;.output.state&quot;" number="37" precision="precise"/><line any_info="No Anys on this line!" content="ReaderStatusTopicNameExtension = &quot;.input.state&quot;" number="38" precision="precise"/><line any_info="No Anys on this line!" content="OutputPortConfigStateControlKey = &quot;state&quot;" number="39" precision="precise"/><line any_info="No Anys on this line!" content="" number="40" precision="empty"/><line any_info="No Anys on this line!" content="" number="41" precision="empty"/><line any_info="No Anys on this line!" content="class KafkaChannelWriter(ChannelWriter):" number="42" precision="precise"/><line any_info="No Anys on this line!" content="" number="43" precision="empty"/><line any_info="No Anys on this line!" content="    # ======================= Static fields =======================" number="44" precision="empty"/><line any_info="No Anys on this line!" content="" number="45" precision="empty"/><line any_info="No Anys on this line!" content="    # ======================= ctor =======================" number="46" precision="empty"/><line any_info="No Anys on this line!" content="" number="47" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x1)" content="    def __init__(self, channel_name: str," number="48" precision="any"/><line any_info="No Anys on this line!" content="                 context: 'OutputPortPlugin'," number="49" precision="empty"/><line any_info="No Anys on this line!" content="                 executor: Optional[concurrent.futures.ThreadPoolExecutor] = None," number="50" precision="precise"/><line any_info="No Anys on this line!" content="                 **kwargs):" number="51" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x1)" content="        super().__init__(channel_name, context, executor, **kwargs)" number="52" precision="any"/><line any_info="No Anys on this line!" content="" number="53" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._data_producer: Optional[KafkaProducer] = None" number="54" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="55" precision="empty"/><line any_info="No Anys on this line!" content="        Data producer, responsible to produce data received by the plugin" number="56" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="57" precision="empty"/><line any_info="No Anys on this line!" content="" number="58" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._writer_status_producer: Optional[KafkaProducer] = None" number="59" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="60" precision="empty"/><line any_info="No Anys on this line!" content="        Output status producer, responsible to produce control signals and schema" number="61" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="62" precision="empty"/><line any_info="No Anys on this line!" content="" number="63" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._reader_status_consumer: Optional[KafkaConsumer] = None" number="64" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="65" precision="empty"/><line any_info="No Anys on this line!" content="        Input status consumer for the channel. Reads the status provided by the KafkaInputChannels." number="66" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="67" precision="empty"/><line any_info="No Anys on this line!" content="" number="68" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x6)" content="        self._data_producer_properties: dict = dict()" number="69" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="70" precision="empty"/><line any_info="No Anys on this line!" content="        Property collection for data producer" number="71" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="72" precision="empty"/><line any_info="No Anys on this line!" content="" number="73" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x6)" content="        self._writer_status_producer_properties: dict = dict()" number="74" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="75" precision="empty"/><line any_info="No Anys on this line!" content="        Property collection for output status producer" number="76" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="77" precision="empty"/><line any_info="No Anys on this line!" content="" number="78" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x6)" content="        self._reader_status_consumer_properties: dict = dict()" number="79" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="80" precision="empty"/><line any_info="No Anys on this line!" content="        Properties for status consumer. This is mainly a copy of the properties of the data consumer. The only" number="81" precision="empty"/><line any_info="No Anys on this line!" content="        exception is the group id." number="82" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="83" precision="empty"/><line any_info="No Anys on this line!" content="" number="84" precision="empty"/><line any_info="No Anys on this line!" content="        self._data_topic_name: str = channel_name" number="85" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="86" precision="empty"/><line any_info="No Anys on this line!" content="        Data topic name" number="87" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="88" precision="empty"/><line any_info="No Anys on this line!" content="" number="89" precision="empty"/><line any_info="No Anys on this line!" content="        self._writer_status_topic_name: str = channel_name + WriterStatusTopicNameExtension" number="90" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="91" precision="empty"/><line any_info="No Anys on this line!" content="        Output status topic name" number="92" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="93" precision="empty"/><line any_info="No Anys on this line!" content="" number="94" precision="empty"/><line any_info="No Anys on this line!" content="        self._reader_status_topic_name = channel_name + ReaderStatusTopicNameExtension" number="95" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="96" precision="empty"/><line any_info="No Anys on this line!" content="        Input status topic name" number="97" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="98" precision="empty"/><line any_info="No Anys on this line!" content="" number="99" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._generic_datum_writer: Optional[DatumWriter] = None" number="100" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="101" precision="empty"/><line any_info="No Anys on this line!" content="        This is the datum writer that converts generic records to byte data" number="102" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="103" precision="empty"/><line any_info="No Anys on this line!" content="" number="104" precision="empty"/><line any_info="No Anys on this line!" content="        self._consumer_timeout_ms: int = 10000" number="105" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="106" precision="empty"/><line any_info="No Anys on this line!" content="        This member stores the timeout value for the consumer polling." number="107" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="108" precision="empty"/><line any_info="No Anys on this line!" content="" number="109" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._admin_client: Optional[KafkaAdminClient] = None" number="110" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="111" precision="empty"/><line any_info="No Anys on this line!" content="        Kafka admin client. Necessary to create/delete topics." number="112" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="113" precision="empty"/><line any_info="No Anys on this line!" content="" number="114" precision="empty"/><line any_info="No Anys on this line!" content="        self._round_robin_partition_idx: int = 0" number="115" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="116" precision="empty"/><line any_info="No Anys on this line!" content="        This index ensures that we produce in a true round robin fashion. It is necessary," number="117" precision="empty"/><line any_info="No Anys on this line!" content="        since Kafka's round robin considers batches of records instead of simple records" number="118" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="119" precision="empty"/><line any_info="No Anys on this line!" content="" number="120" precision="empty"/><line any_info="No Anys on this line!" content="        self._target_partition_count: int = 1" number="121" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="122" precision="empty"/><line any_info="No Anys on this line!" content="        The number of partitions of the topic that is created by the channel reader. This" number="123" precision="empty"/><line any_info="No Anys on this line!" content="        value will be read from the Kafka directly." number="124" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="125" precision="empty"/><line any_info="No Anys on this line!" content="" number="126" precision="empty"/><line any_info="No Anys on this line!" content="        # Consumer / producer configuration" number="127" precision="empty"/><line any_info="No Anys on this line!" content="        # =================================" number="128" precision="empty"/><line any_info="No Anys on this line!" content="" number="129" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_producer_properties[&quot;client_id&quot;] = self._unique_name" number="130" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_producer_properties[&quot;key_serializer&quot;] = lambda key: key.encode('utf-8') if key else None" number="131" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_producer_properties[&quot;acks&quot;] = 1" number="132" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_producer_properties[&quot;retries&quot;] = 10" number="133" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_producer_properties[&quot;max_block_ms&quot;] = 10000" number="134" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="135" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;client_id&quot;] = self._unique_name" number="136" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;key_deserializer&quot;] = lambda key: key.decode(&quot;utf-8&quot;) if key else &quot;&quot;" number="137" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;value_deserializer&quot;] = lambda val: val.decode(&quot;utf-8&quot;) \" number="138" precision="imprecise"/><line any_info="No Anys on this line!" content="            if val else &quot;Should not be 'None'. Check for cause!&quot;" number="139" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;enable_auto_commit&quot;] = False" number="140" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;session_timeout_ms&quot;] = 10000" number="141" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;auto_offset_reset&quot;] = &quot;earliest&quot;" number="142" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;group_id&quot;] = self._unique_name + &quot;.&quot; + self._reader_status_topic_name" number="143" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="144" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def set_location(self, channel_location: str):" number="145" precision="any"/><line any_info="No Anys on this line!" content="        super().set_location(channel_location)" number="146" precision="precise"/><line any_info="No Anys on this line!" content="" number="147" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_producer_properties[&quot;bootstrap_servers&quot;] = channel_location" number="148" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_consumer_properties[&quot;bootstrap_servers&quot;] = channel_location" number="149" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="150" precision="empty"/><line any_info="No Anys on this line!" content="    def can_close(self) -&gt; bool:" number="151" precision="precise"/><line any_info="No Anys on this line!" content="        return True" number="152" precision="precise"/><line any_info="No Anys on this line!" content="" number="153" precision="empty"/><line any_info="No Anys on this line!" content="    def _create_resources(self):" number="154" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self._location is None:" number="155" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            raise AttributeError(&quot;Missing channel location parameter.&quot;)" number="156" precision="any"/><line any_info="No Anys on this line!" content="" number="157" precision="empty"/><line any_info="No Anys on this line!" content="        return True" number="158" precision="any"/><line any_info="No Anys on this line!" content="" number="159" precision="empty"/><line any_info="No Anys on this line!" content="    def _delete_resources(self):" number="160" precision="any"/><line any_info="No Anys on this line!" content="        return True" number="161" precision="any"/><line any_info="No Anys on this line!" content="" number="162" precision="empty"/><line any_info="No Anys on this line!" content="    def _open_channel(self):" number="163" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self._location is None:" number="164" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            raise AttributeError(&quot;Missing channel location parameter.&quot;)" number="165" precision="any"/><line any_info="No Anys on this line!" content="" number="166" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self._data_topic_name is None:" number="167" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            raise AttributeError(&quot;Missing channel name.&quot;)" number="168" precision="any"/><line any_info="No Anys on this line!" content="" number="169" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="170" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._admin_client is None:" number="171" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._admin_client = KafkaAdminClient(bootstrap_servers=self._location)" number="172" precision="any"/><line any_info="No Anys on this line!" content="" number="173" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = self._admin_client.list_topics()" number="174" precision="any"/><line any_info="No Anys on this line!" content="" number="175" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            if (self._data_topic_name not in existing_topics) or \" number="176" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    (self._reader_status_topic_name not in existing_topics) or \" number="177" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    (self._writer_status_topic_name not in existing_topics):" number="178" precision="any"/><line any_info="No Anys on this line!" content="                return False" number="179" precision="any"/><line any_info="No Anys on this line!" content="" number="180" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            self._target_partition_count = \" number="181" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                len(self._admin_client.describe_topics([self._data_topic_name])[0][&quot;partitions&quot;])" number="182" precision="any"/><line any_info="No Anys on this line!" content="" number="183" precision="empty"/><line any_info="No Anys on this line!" content="            # ===== Initializing producers/consumers =====" number="184" precision="empty"/><line any_info="No Anys on this line!" content="" number="185" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._reader_status_consumer is None:" number="186" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._reader_status_consumer = KafkaConsumer(**self._reader_status_consumer_properties)" number="187" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                self._reader_status_consumer.subscribe(topics=[self._reader_status_topic_name])" number="188" precision="any"/><line any_info="No Anys on this line!" content="" number="189" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._data_producer is None:" number="190" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._data_producer = KafkaProducer(**self._data_producer_properties)" number="191" precision="any"/><line any_info="No Anys on this line!" content="" number="192" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._writer_status_producer is None:" number="193" precision="any"/><line any_info="No Anys on this line!" content="                # Copy all data consumer properties" number="194" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                self._writer_status_producer_properties = self._data_producer_properties.copy()" number="195" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._writer_status_producer_properties[&quot;value_serializer&quot;] = lambda val: val.encode('utf-8')" number="196" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._writer_status_producer = KafkaProducer(**self._writer_status_producer_properties)" number="197" precision="any"/><line any_info="No Anys on this line!" content="" number="198" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="199" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        except (NoBrokersAvailable, NodeNotReadyError) as e:" number="200" precision="any"/><line any_info="No Anys on this line!" content="            # These might be transient errors, if Kafka is overloaded, so retry makes sense" number="201" precision="empty"/><line any_info="No Anys on this line!" content="            # TODO - implement timeout mechanism?" number="202" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._logger.warn(e)" number="203" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="204" precision="any"/><line any_info="No Anys on this line!" content="" number="205" precision="empty"/><line any_info="No Anys on this line!" content="    def _close_channel(self):" number="206" precision="any"/><line any_info="No Anys on this line!" content="        try:" number="207" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._reader_status_consumer is not None:" number="208" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._reader_status_consumer.close(False)" number="209" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._reader_status_consumer = None" number="210" precision="any"/><line any_info="No Anys on this line!" content="" number="211" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._writer_status_producer is not None:" number="212" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._writer_status_producer.close()" number="213" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._writer_status_producer = None" number="214" precision="any"/><line any_info="No Anys on this line!" content="" number="215" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._data_producer is not None:" number="216" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._data_producer.close()" number="217" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._data_producer = None" number="218" precision="any"/><line any_info="No Anys on this line!" content="" number="219" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._admin_client is not None:" number="220" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._admin_client.close()" number="221" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._resource_checker_admin_client = None" number="222" precision="any"/><line any_info="No Anys on this line!" content="" number="223" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="224" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        except (NoBrokersAvailable, NodeNotReadyError) as e:" number="225" precision="any"/><line any_info="No Anys on this line!" content="            # These might be transient errors, if Kafka is overloaded, so retry makes sense" number="226" precision="empty"/><line any_info="No Anys on this line!" content="            # TODO - implement timeout mechanism?" number="227" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._logger.warn(e)" number="228" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="229" precision="any"/><line any_info="No Anys on this line!" content="" number="230" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)&#10;Unannotated (x1)" content="    def _configure_channel(self, configuration: dict):" number="231" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x7)" content="        for key in configuration.keys():" number="232" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x1)&#10;Unimported (x2)" content="            if key in KafkaProducer.DEFAULT_CONFIG:" number="233" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x16)" content="                self._data_producer_properties[key] = configuration.get(key)" number="234" precision="any"/><line any_info="No Anys on this line!" content="" number="235" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)&#10;Unannotated (x1)" content="    def _write_records(self, records: list[Any]):" number="236" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)&#10;Omitted Generics (x3)" content="        if not isinstance(records, list):" number="237" precision="imprecise"/><line any_info="No Anys on this line!" content="            raise TypeError(f&quot;Invalid record type: {type(records)}. List of records (dicts) is expected.&quot;)" number="238" precision="unanalyzed"/><line any_info="No Anys on this line!" content="" number="239" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="        if self._generic_datum_writer is None:" number="240" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="            self._generic_datum_writer = DatumWriter(writers_schema=parse(self._context.get_schema()))" number="241" precision="any"/><line any_info="No Anys on this line!" content="" number="242" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        converted_records = list()" number="243" precision="precise"/><line any_info="No Anys on this line!" content="" number="244" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot; Record preparation and sending is separated not to send any record from" number="245" precision="empty"/><line any_info="No Anys on this line!" content="            the batch, if some records are not valid &quot;&quot;&quot;" number="246" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        for record in records:" number="247" precision="any"/><line any_info="No Anys on this line!" content="            record_bytes = io.BytesIO()" number="248" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            encoder = BinaryEncoder(record_bytes)" number="249" precision="any"/><line any_info="No Anys on this line!" content="" number="250" precision="empty"/><line any_info="No Anys on this line!" content="            try:" number="251" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x4)&#10;Explicit (x1)" content="                self._generic_datum_writer.write(record, encoder)" number="252" precision="any"/><line any_info="No Anys on this line!" content="                converted_records.append(record_bytes.getvalue())" number="253" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="            except AvroTypeException:" number="254" precision="any"/><line any_info="No Anys on this line!" content="                # This line is only executed, if there is an issue with the" number="255" precision="empty"/><line any_info="No Anys on this line!" content="                # data w.r.t. the schema. The used package gives a better message" number="256" precision="empty"/><line any_info="No Anys on this line!" content="                # what is the issue and where" number="257" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="                self._logger.error(record)" number="258" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="                schema = Schema(self._context.get_schema())" number="259" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="                parsed_schema = schema.parse()" number="260" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x3)&#10;Explicit (x1)" content="                parsed_schema.validate(record)" number="261" precision="any"/><line any_info="No Anys on this line!" content="" number="262" precision="empty"/><line any_info="No Anys on this line!" content="        for converted_record in converted_records:" number="263" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="            self._data_producer.send(self._data_topic_name," number="264" precision="any"/><line any_info="No Anys on this line!" content="                                     key=str(self._round_robin_partition_idx)," number="265" precision="precise"/><line any_info="No Anys on this line!" content="                                     value=converted_record," number="266" precision="precise"/><line any_info="No Anys on this line!" content="                                     partition=self._round_robin_partition_idx)" number="267" precision="precise"/><line any_info="No Anys on this line!" content="" number="268" precision="empty"/><line any_info="No Anys on this line!" content="            if 1 &lt; self._target_partition_count:" number="269" precision="precise"/><line any_info="No Anys on this line!" content="                self._round_robin_partition_idx += 1" number="270" precision="precise"/><line any_info="No Anys on this line!" content="" number="271" precision="empty"/><line any_info="No Anys on this line!" content="                if self._round_robin_partition_idx == self._target_partition_count:" number="272" precision="precise"/><line any_info="No Anys on this line!" content="                    self._round_robin_partition_idx = 0" number="273" precision="precise"/><line any_info="No Anys on this line!" content="" number="274" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def start_channel(self, send_status_message: bool = True):" number="275" precision="any"/><line any_info="No Anys on this line!" content="        super().start_channel(send_status_message)" number="276" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        self._writer_status_producer.flush()" number="277" precision="any"/><line any_info="No Anys on this line!" content="" number="278" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def stop_channel(self, send_status_message: bool = True):" number="279" precision="any"/><line any_info="No Anys on this line!" content="        # The reason for that calling order is that we need to ensure" number="280" precision="empty"/><line any_info="No Anys on this line!" content="        # that all the data has been flushed before calling the stop." number="281" precision="empty"/><line any_info="No Anys on this line!" content="        # But the stop shall be flushed as well afterward." number="282" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        self._data_producer.flush()" number="283" precision="any"/><line any_info="No Anys on this line!" content="        super().stop_channel(send_status_message)" number="284" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        self._writer_status_producer.flush()" number="285" precision="any"/><line any_info="No Anys on this line!" content="" number="286" precision="empty"/><line any_info="No Anys on this line!" content="    def _send_status_message(self, status_string):" number="287" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self._writer_status_producer.send(self._writer_status_topic_name," number="288" precision="any"/><line any_info="No Anys on this line!" content="                                          key=OutputPortConfigStateControlKey," number="289" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                                          value=status_string)" number="290" precision="any"/><line any_info="No Anys on this line!" content="" number="291" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x1)" content="    def _retrieve_status_messages(self) -&gt; Optional[list]:" number="292" precision="imprecise"/><line any_info="No Anys on this line!" content="        try:" number="293" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="            consumed_state_records = self._reader_status_consumer.poll(self._consumer_timeout_ms)" number="294" precision="any"/><line any_info="No Anys on this line!" content="" number="295" precision="empty"/><line any_info="No Anys on this line!" content="            status_list = []" number="296" precision="precise"/><line any_info="No Anys on this line!" content="" number="297" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="            for topic, controlRecords in consumed_state_records.items():" number="298" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                for controlRecord in controlRecords:" number="299" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                    if OutputPortConfigStateControlKey in controlRecord.key:" number="300" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="                        status_list.append(controlRecord.value)" number="301" precision="any"/><line any_info="No Anys on this line!" content="" number="302" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="            return status_list" number="303" precision="imprecise"/><line any_info="No Anys on this line!" content="        except Exception:" number="304" precision="precise"/><line any_info="No Anys on this line!" content="            return None" number="305" precision="precise"/><line any_info="No Anys on this line!" content="" number="306" precision="empty"/><line any_info="No Anys on this line!" content="" number="307" precision="empty"/><line any_info="No Anys on this line!" content="class KafkaChannelReader(ChannelReader):" number="308" precision="precise"/><line any_info="No Anys on this line!" content="" number="309" precision="empty"/><line any_info="No Anys on this line!" content="    InitialDataConsumerTimeoutInMs = 10000" number="310" precision="precise"/><line any_info="No Anys on this line!" content="" number="311" precision="empty"/><line any_info="No Anys on this line!" content="    DataConsumerTimeoutInMs = 5000" number="312" precision="precise"/><line any_info="No Anys on this line!" content="" number="313" precision="empty"/><line any_info="No Anys on this line!" content="    StatusConsumerTimeoutInMs = 1000" number="314" precision="precise"/><line any_info="No Anys on this line!" content="" number="315" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x1)" content="    def __init__(self, channel_name: str," number="316" precision="any"/><line any_info="No Anys on this line!" content="                 context: 'InputPortPlugin'," number="317" precision="empty"/><line any_info="No Anys on this line!" content="                 executor: Optional[concurrent.futures.ThreadPoolExecutor] = None," number="318" precision="precise"/><line any_info="No Anys on this line!" content="                 **kwargs):" number="319" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x1)" content="        super().__init__(channel_name, context, executor, **kwargs)" number="320" precision="any"/><line any_info="No Anys on this line!" content="" number="321" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._data_consumer: Optional[KafkaConsumer] = None" number="322" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="323" precision="empty"/><line any_info="No Anys on this line!" content="        This is a kafka consumer to poll data from the specified data topic." number="324" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="325" precision="empty"/><line any_info="No Anys on this line!" content="" number="326" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._writer_status_consumer: Optional[KafkaConsumer] = None" number="327" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="328" precision="empty"/><line any_info="No Anys on this line!" content="        This is a kafka consumer to poll status updates" number="329" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="330" precision="empty"/><line any_info="No Anys on this line!" content="" number="331" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._reader_status_producer: Optional[KafkaProducer] = None" number="332" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="333" precision="empty"/><line any_info="No Anys on this line!" content="        Control producer, responsible to produce status messages" number="334" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="335" precision="empty"/><line any_info="No Anys on this line!" content="" number="336" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x6)" content="        self._data_consumer_properties: dict = dict()" number="337" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="338" precision="empty"/><line any_info="No Anys on this line!" content="        Properties for data consumer as expected by the KafkaConsumer." number="339" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="340" precision="empty"/><line any_info="No Anys on this line!" content="" number="341" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x6)" content="        self._writer_status_consumer_properties: dict = dict()" number="342" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="343" precision="empty"/><line any_info="No Anys on this line!" content="        Properties for control consumer as expected by the KafkaConsumer. Note that with some extension the complete" number="344" precision="empty"/><line any_info="No Anys on this line!" content="        data consumer properties will be copied." number="345" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="346" precision="empty"/><line any_info="No Anys on this line!" content="" number="347" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x6)" content="        self._reader_status_producer_properties: dict = dict()" number="348" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="349" precision="empty"/><line any_info="No Anys on this line!" content="        Properties for status producer. This is mainly a copy of the properties of the data consumer. The only" number="350" precision="empty"/><line any_info="No Anys on this line!" content="        exception is the group id." number="351" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="352" precision="empty"/><line any_info="No Anys on this line!" content="" number="353" precision="empty"/><line any_info="No Anys on this line!" content="        self._data_topic_name: str = channel_name" number="354" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="355" precision="empty"/><line any_info="No Anys on this line!" content="        This member stores the name of the data topic." number="356" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="357" precision="empty"/><line any_info="No Anys on this line!" content="" number="358" precision="empty"/><line any_info="No Anys on this line!" content="        self._writer_status_topic_name: str = channel_name + WriterStatusTopicNameExtension" number="359" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="360" precision="empty"/><line any_info="No Anys on this line!" content="        This member stores the name of the control topic." number="361" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="362" precision="empty"/><line any_info="No Anys on this line!" content="" number="363" precision="empty"/><line any_info="No Anys on this line!" content="        self._reader_status_topic_name: str = channel_name + ReaderStatusTopicNameExtension" number="364" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="365" precision="empty"/><line any_info="No Anys on this line!" content="        Input status topic name" number="366" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="367" precision="empty"/><line any_info="No Anys on this line!" content="" number="368" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Unannotated (x1)" content="        self._consumer_timeout_ms: int = KafkaChannelReader.InitialDataConsumerTimeoutInMs" number="369" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="370" precision="empty"/><line any_info="No Anys on this line!" content="        This member stores the timeout value for the consumer polling." number="371" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="372" precision="empty"/><line any_info="No Anys on this line!" content="" number="373" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._generic_datum_reader: Optional[DatumReader] = None" number="374" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="375" precision="empty"/><line any_info="No Anys on this line!" content="        This is the generic datum reader, which converts bytes to generic records." number="376" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="377" precision="empty"/><line any_info="No Anys on this line!" content="" number="378" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._target_partition: Optional[TopicPartition] = None" number="379" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="380" precision="empty"/><line any_info="No Anys on this line!" content="        The topic partition that this channel will read" number="381" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="382" precision="empty"/><line any_info="No Anys on this line!" content="" number="383" precision="empty"/><line any_info="No Anys on this line!" content="        self._partition_count: int = 1 if self._context.is_in_group_mode() else self._context.get_group_size()" number="384" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="385" precision="empty"/><line any_info="No Anys on this line!" content="        The number of partitions to be created for the data channel. If group mode," number="386" precision="empty"/><line any_info="No Anys on this line!" content="        then it shall be 1, since all the channel readers in the group will read all" number="387" precision="empty"/><line any_info="No Anys on this line!" content="        the records sent to the channel. Otherwise it is the size of the group." number="388" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="389" precision="empty"/><line any_info="No Anys on this line!" content="" number="390" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        self._admin_client: Optional[KafkaAdminClient] = None" number="391" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="392" precision="empty"/><line any_info="No Anys on this line!" content="        Kafka admin client. Necessary to check, whether topic is existing on retrieving 0 records on poll." number="393" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="394" precision="empty"/><line any_info="No Anys on this line!" content="" number="395" precision="empty"/><line any_info="No Anys on this line!" content="        # Consumer / producer configuration" number="396" precision="empty"/><line any_info="No Anys on this line!" content="        # =================================" number="397" precision="empty"/><line any_info="No Anys on this line!" content="" number="398" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;client_id&quot;] = self._unique_name" number="399" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;key_deserializer&quot;] = lambda key: key.decode(&quot;utf-8&quot;) if key else &quot;&quot;" number="400" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;enable_auto_commit&quot;] = False" number="401" precision="imprecise"/><line any_info="No Anys on this line!" content="        # https://cwiki.apache.org/confluence/display/KAFKA/KIP-735%3A+Increase+default+consumer+session+timeout" number="402" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;session_timeout_ms&quot;] = 45 * 1000" number="403" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;max_poll_interval_ms&quot;] = 30 * 60 * 1000" number="404" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;auto_offset_reset&quot;] = &quot;earliest&quot;" number="405" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;max_partition_fetch_bytes&quot;] = 50 * 1024 * 1024" number="406" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;fetch_max_bytes&quot;] = 50 * 1024 * 1024" number="407" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;max_poll_records&quot;] = 1" number="408" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unimported (x1)&#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;partition_assignment_strategy&quot;] = [RoundRobinPartitionAssignor]" number="409" precision="any"/><line any_info="No Anys on this line!" content="" number="410" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;client_id&quot;] = self._unique_name" number="411" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;group_id&quot;] = self._unique_name + &quot;.&quot; + self._writer_status_topic_name" number="412" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;key_deserializer&quot;] = lambda key: key.decode(&quot;utf-8&quot;) if key else &quot;&quot;" number="413" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;value_deserializer&quot;] = \" number="414" precision="imprecise"/><line any_info="No Anys on this line!" content="            lambda val: val.decode(&quot;utf-8&quot;) if val else &quot;Should not be 'None'. Check for cause!&quot;" number="415" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;enable_auto_commit&quot;] = False" number="416" precision="imprecise"/><line any_info="No Anys on this line!" content="        # https://cwiki.apache.org/confluence/display/KAFKA/KIP-735%3A+Increase+default+consumer+session+timeout" number="417" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;session_timeout_ms&quot;] = 45 * 1000" number="418" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;max_poll_interval_ms&quot;] = 30 * 60 * 1000" number="419" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;auto_offset_reset&quot;] = &quot;earliest&quot;" number="420" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;max_partition_fetch_bytes&quot;] = 50 * 1024 * 1024" number="421" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;fetch_max_bytes&quot;] = 50 * 1024 * 1024" number="422" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="423" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;client_id&quot;] = self._unique_name" number="424" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;key_serializer&quot;] = lambda key: key.encode('utf-8') if key else None" number="425" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;value_serializer&quot;] = lambda key: key.encode('utf-8') \" number="426" precision="imprecise"/><line any_info="No Anys on this line!" content="            if key else &quot;Should not be 'None'. Check for cause!&quot;" number="427" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;acks&quot;] = 1" number="428" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;retries&quot;] = 10" number="429" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;max_block_ms&quot;] = 10000" number="430" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="431" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def set_location(self, channel_location: str):" number="432" precision="any"/><line any_info="No Anys on this line!" content="        super().set_location(channel_location)" number="433" precision="precise"/><line any_info="No Anys on this line!" content="" number="434" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._data_consumer_properties[&quot;bootstrap_servers&quot;] = channel_location" number="435" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._reader_status_producer_properties[&quot;bootstrap_servers&quot;] = channel_location" number="436" precision="imprecise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        self._writer_status_consumer_properties[&quot;bootstrap_servers&quot;] = channel_location" number="437" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="438" precision="empty"/><line any_info="No Anys on this line!" content="    def _open_channel(self):" number="439" precision="any"/><line any_info="No Anys on this line!" content="" number="440" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self._location is None:" number="441" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            raise AttributeError(&quot;Missing channel location parameter.&quot;)" number="442" precision="any"/><line any_info="No Anys on this line!" content="" number="443" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="444" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._admin_client is None:" number="445" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._admin_client = KafkaAdminClient(bootstrap_servers=self._location)" number="446" precision="any"/><line any_info="No Anys on this line!" content="" number="447" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = self._admin_client.list_topics()" number="448" precision="any"/><line any_info="No Anys on this line!" content="" number="449" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            if (self._data_topic_name not in existing_topics) or \" number="450" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    (self._reader_status_topic_name not in existing_topics) or \" number="451" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    (self._writer_status_topic_name not in existing_topics):" number="452" precision="any"/><line any_info="No Anys on this line!" content="                return False" number="453" precision="any"/><line any_info="No Anys on this line!" content="" number="454" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._reader_status_producer is None:" number="455" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._reader_status_producer = KafkaProducer(**self._reader_status_producer_properties)" number="456" precision="any"/><line any_info="No Anys on this line!" content="" number="457" precision="empty"/><line any_info="No Anys on this line!" content="            # To ensure idempotence if it would be necessary" number="458" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._data_consumer is None:" number="459" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                if (self._context.get_group_name() is not None) and (not self._context.is_in_group_mode()):" number="460" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                    self._data_consumer_properties[&quot;group_id&quot;] = \" number="461" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                        self._context.get_group_name() + &quot;.&quot; + self._data_topic_name" number="462" precision="any"/><line any_info="No Anys on this line!" content="                else:" number="463" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                    self._data_consumer_properties[&quot;group_id&quot;] = self._unique_name + &quot;.&quot; + self._data_topic_name" number="464" precision="any"/><line any_info="No Anys on this line!" content="" number="465" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._data_consumer = KafkaConsumer(**self._data_consumer_properties)" number="466" precision="any"/><line any_info="No Anys on this line!" content="" number="467" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                if not self._context.is_in_group_mode():" number="468" precision="any"/><line any_info="No Anys on this line!" content="                    # Assign consumer to partition based on its group index" number="469" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x1)" content="                    self._target_partition = TopicPartition(self._data_topic_name, self._context.get_group_index())" number="470" precision="any"/><line any_info="No Anys on this line!" content="                else:" number="471" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                    self._target_partition = TopicPartition(self._data_topic_name, 0)" number="472" precision="any"/><line any_info="No Anys on this line!" content="" number="473" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                self._data_consumer.assign([self._target_partition])" number="474" precision="any"/><line any_info="No Anys on this line!" content="" number="475" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._writer_status_consumer is None:" number="476" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._writer_status_consumer = KafkaConsumer(self._writer_status_topic_name," number="477" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                                                             **self._writer_status_consumer_properties)" number="478" precision="any"/><line any_info="No Anys on this line!" content="" number="479" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Omitted Generics (x3)" content="                topics_to_subscribe = list()" number="480" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                topics_to_subscribe.append(self._writer_status_topic_name)" number="481" precision="any"/><line any_info="No Anys on this line!" content="" number="482" precision="empty"/><line any_info="No Anys on this line!" content="                # Subscribe to the reader status topic as well, since the replica" number="483" precision="empty"/><line any_info="No Anys on this line!" content="                # states shall be recovered as well in this case." number="484" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x8)" content="                if 1 &lt; self._context.get_group_size() and self._context.is_principal():" number="485" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                    topics_to_subscribe.append(self._reader_status_topic_name)" number="486" precision="any"/><line any_info="No Anys on this line!" content="" number="487" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                self._writer_status_consumer.subscribe(topics=topics_to_subscribe)" number="488" precision="any"/><line any_info="No Anys on this line!" content="" number="489" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="490" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        except (NoBrokersAvailable, NodeNotReadyError) as e:" number="491" precision="any"/><line any_info="No Anys on this line!" content="            # These might be transient errors, if Kafka is overloaded, so retry makes sense" number="492" precision="empty"/><line any_info="No Anys on this line!" content="            # TODO - implement timeout mechanism?" number="493" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._logger.warn(e)" number="494" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="495" precision="any"/><line any_info="No Anys on this line!" content="" number="496" precision="empty"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;" number="497" precision="empty"/><line any_info="No Anys on this line!" content="    This implementation of the method will care for client closures." number="498" precision="empty"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;" number="499" precision="empty"/><line any_info="No Anys on this line!" content="    def _close_channel(self):" number="500" precision="any"/><line any_info="No Anys on this line!" content="        try:" number="501" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._reader_status_producer is not None:" number="502" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._reader_status_producer.close()" number="503" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._reader_status_producer = None" number="504" precision="any"/><line any_info="No Anys on this line!" content="" number="505" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._writer_status_consumer is not None:" number="506" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._writer_status_consumer.close(False)" number="507" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._writer_status_consumer = None" number="508" precision="any"/><line any_info="No Anys on this line!" content="" number="509" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._data_consumer is not None:" number="510" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._data_consumer.close(False)" number="511" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._data_consumer = None" number="512" precision="any"/><line any_info="No Anys on this line!" content="" number="513" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="514" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        except (NoBrokersAvailable, NodeNotReadyError) as e:" number="515" precision="any"/><line any_info="No Anys on this line!" content="            # These might be transient errors, if Kafka is overloaded, so retry makes sense" number="516" precision="empty"/><line any_info="No Anys on this line!" content="            # TODO - implement timeout mechanism?" number="517" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._logger.warn(e)" number="518" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="519" precision="any"/><line any_info="No Anys on this line!" content="" number="520" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)&#10;Unannotated (x1)" content="    def _configure_channel(self, configuration: dict):" number="521" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x7)" content="        for key in configuration.keys():" number="522" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x1)&#10;Unimported (x2)" content="            if key in KafkaConsumer.DEFAULT_CONFIG:" number="523" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x16)" content="                self._data_consumer_properties[key] = configuration.get(key)" number="524" precision="any"/><line any_info="No Anys on this line!" content="" number="525" precision="empty"/><line any_info="No Anys on this line!" content="    def _load_input_record_offset(self) -&gt; int:" number="526" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="        offset_meta_data = self._data_consumer.committed(self._target_partition)" number="527" precision="any"/><line any_info="No Anys on this line!" content="        retrieved_offset = 0" number="528" precision="precise"/><line any_info="No Anys on this line!" content="" number="529" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="        if offset_meta_data is not None:" number="530" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="            if isinstance(offset_meta_data, OffsetAndMetadata):" number="531" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                retrieved_offset = offset_meta_data.offset" number="532" precision="any"/><line any_info="No Anys on this line!" content="            else:" number="533" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="                retrieved_offset = offset_meta_data" number="534" precision="any"/><line any_info="No Anys on this line!" content="" number="535" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="        self._data_consumer.seek(self._target_partition, retrieved_offset)" number="536" precision="any"/><line any_info="No Anys on this line!" content="" number="537" precision="empty"/><line any_info="No Anys on this line!" content="        return retrieved_offset" number="538" precision="precise"/><line any_info="No Anys on this line!" content="" number="539" precision="empty"/><line any_info="No Anys on this line!" content="    def _read_records(self):" number="540" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self._generic_datum_reader is None:" number="541" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x2)" content="            self._generic_datum_reader = DatumReader(parse(self._context.get_schema()))" number="542" precision="any"/><line any_info="No Anys on this line!" content="" number="543" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        output_records = []" number="544" precision="any"/><line any_info="No Anys on this line!" content="" number="545" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="        consumed_data_records: dict[str, list[ConsumerRecord]] = \" number="546" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._data_consumer.poll(timeout_ms=self._consumer_timeout_ms)" number="547" precision="any"/><line any_info="No Anys on this line!" content="" number="548" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        if KafkaChannelReader.InitialDataConsumerTimeoutInMs == self._consumer_timeout_ms:" number="549" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="            self._consumer_timeout_ms = KafkaChannelReader.DataConsumerTimeoutInMs" number="550" precision="any"/><line any_info="No Anys on this line!" content="" number="551" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)&#10;Unimported (x1)" content="        for topic, records in consumed_data_records.items():" number="552" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for record in records:" number="553" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x1)" content="                decoder = BinaryDecoder(io.BytesIO(record.value))" number="554" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                output_records.append(self._generic_datum_reader.read(decoder))" number="555" precision="any"/><line any_info="No Anys on this line!" content="" number="556" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        return output_records" number="557" precision="any"/><line any_info="No Anys on this line!" content="" number="558" precision="empty"/><line any_info="No Anys on this line!" content="    def can_close(self) -&gt; bool:" number="559" precision="precise"/><line any_info="No Anys on this line!" content="        if (not self._context.is_principal()) or (self._context.get_group_name() is None):" number="560" precision="precise"/><line any_info="No Anys on this line!" content="            return True" number="561" precision="precise"/><line any_info="No Anys on this line!" content="" number="562" precision="empty"/><line any_info="No Anys on this line!" content="        self.invoke_sync_status_update()" number="563" precision="precise"/><line any_info="No Anys on this line!" content="" number="564" precision="empty"/><line any_info="No Anys on this line!" content="        if 0 == self.retrieve_all_connected_channel_count():" number="565" precision="precise"/><line any_info="No Anys on this line!" content="            return True" number="566" precision="precise"/><line any_info="No Anys on this line!" content="" number="567" precision="empty"/><line any_info="No Anys on this line!" content="        finished_replica_count = len(self.retrieve_connected_channel_unique_names(" number="568" precision="precise"/><line any_info="No Anys on this line!" content="            lambda flt: (flt.get_channel_group_name() == self._context.get_group_name()) and" number="569" precision="precise"/><line any_info="No Anys on this line!" content="                        ((not flt.is_channel_healthy()) or flt.is_channel_stopped() or flt.is_channel_closed())" number="570" precision="precise"/><line any_info="No Anys on this line!" content="        ))" number="571" precision="empty"/><line any_info="No Anys on this line!" content="" number="572" precision="empty"/><line any_info="No Anys on this line!" content="        return finished_replica_count == (self._context.get_group_size() - 1)" number="573" precision="precise"/><line any_info="No Anys on this line!" content="" number="574" precision="empty"/><line any_info="No Anys on this line!" content="    def has_records(self) -&gt; bool:" number="575" precision="precise"/><line any_info="No Anys on this line!" content="        return 0 &lt; self.get_consumer_lag()" number="576" precision="precise"/><line any_info="No Anys on this line!" content="" number="577" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def start_channel(self, send_status_message: bool = True):" number="578" precision="any"/><line any_info="No Anys on this line!" content="        super().start_channel(send_status_message)" number="579" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        self._reader_status_producer.flush()" number="580" precision="any"/><line any_info="No Anys on this line!" content="" number="581" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def stop_channel(self, send_status_message: bool = True):" number="582" precision="any"/><line any_info="No Anys on this line!" content="        super().stop_channel(send_status_message)" number="583" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x3)" content="        self._reader_status_producer.flush()" number="584" precision="any"/><line any_info="No Anys on this line!" content="" number="585" precision="empty"/><line any_info="No Anys on this line!" content="    def _commit_offset(self, offset: int) -&gt; None:" number="586" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x6)" content="        self._data_consumer.commit({self._target_partition: OffsetAndMetadata(offset, &quot;&quot;)})" number="587" precision="any"/><line any_info="No Anys on this line!" content="" number="588" precision="empty"/><line any_info="No Anys on this line!" content="    def _send_status_message(self, message):" number="589" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self._reader_status_producer.send(self._reader_status_topic_name," number="590" precision="any"/><line any_info="No Anys on this line!" content="                                          key=OutputPortConfigStateControlKey," number="591" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                                          value=message)" number="592" precision="any"/><line any_info="No Anys on this line!" content="" number="593" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x1)" content="    def _retrieve_status_messages(self) -&gt; Optional[list]:" number="594" precision="imprecise"/><line any_info="No Anys on this line!" content="        try:" number="595" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x5)&#10;Unannotated (x1)" content="            consumed_state_records = self._writer_status_consumer.poll(KafkaChannelReader.StatusConsumerTimeoutInMs)" number="596" precision="any"/><line any_info="No Anys on this line!" content="            status_list = []" number="597" precision="precise"/><line any_info="No Anys on this line!" content="" number="598" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="            for topic, controlRecords in consumed_state_records.items():" number="599" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                for controlRecord in controlRecords:" number="600" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)" content="                    if OutputPortConfigStateControlKey in controlRecord.key:" number="601" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="                        status_list.append(controlRecord.value)" number="602" precision="any"/><line any_info="No Anys on this line!" content="" number="603" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x1)" content="            return status_list" number="604" precision="imprecise"/><line any_info="No Anys on this line!" content="        except Exception:" number="605" precision="precise"/><line any_info="No Anys on this line!" content="            return None" number="606" precision="precise"/><line any_info="No Anys on this line!" content="" number="607" precision="empty"/><line any_info="No Anys on this line!" content="    def _create_resources(self):" number="608" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self._location is None:" number="609" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            raise AttributeError(&quot;Missing channel location parameter.&quot;)" number="610" precision="any"/><line any_info="No Anys on this line!" content="" number="611" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="612" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._admin_client is None:" number="613" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Unimported (x1)" content="                self._admin_client = KafkaAdminClient(bootstrap_servers=self._location)" number="614" precision="any"/><line any_info="No Anys on this line!" content="" number="615" precision="empty"/><line any_info="No Anys on this line!" content="            # ===== Checking topic existences =====" number="616" precision="empty"/><line any_info="No Anys on this line!" content="" number="617" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = self._admin_client.list_topics()" number="618" precision="any"/><line any_info="No Anys on this line!" content="" number="619" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._data_topic_name in existing_topics:" number="620" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="                partitions = self._admin_client.describe_topics([self._data_topic_name])[0][&quot;partitions&quot;]" number="621" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                if len(partitions) != self._partition_count:" number="622" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                    self._admin_client.delete_topics(topics=[self._data_topic_name], timeout_ms=30000)" number="623" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                    existing_topics = self._admin_client.list_topics()" number="624" precision="any"/><line any_info="No Anys on this line!" content="" number="625" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._data_topic_name not in existing_topics:" number="626" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)&#10;Unimported (x1)" content="                self._admin_client.create_topics(new_topics=[NewTopic(self._data_topic_name, self._partition_count, 1)])" number="627" precision="any"/><line any_info="No Anys on this line!" content="" number="628" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._writer_status_topic_name not in existing_topics:" number="629" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x1)" content="                self._admin_client.create_topics(new_topics=[NewTopic(self._writer_status_topic_name, 1, 1)])" number="630" precision="any"/><line any_info="No Anys on this line!" content="" number="631" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._reader_status_topic_name not in existing_topics:" number="632" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)&#10;Unimported (x1)" content="                self._admin_client.create_topics(new_topics=[NewTopic(self._reader_status_topic_name, 1, 1)])" number="633" precision="any"/><line any_info="No Anys on this line!" content="" number="634" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="635" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        except (NoBrokersAvailable, NodeNotReadyError) as e:" number="636" precision="any"/><line any_info="No Anys on this line!" content="            # These might be transient errors, if Kafka is overloaded, so retry makes sense" number="637" precision="empty"/><line any_info="No Anys on this line!" content="            # TODO - implement timeout mechanism?" number="638" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._logger.warn(e)" number="639" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="640" precision="any"/><line any_info="No Anys on this line!" content="" number="641" precision="empty"/><line any_info="No Anys on this line!" content="    def _delete_resources(self):" number="642" precision="any"/><line any_info="No Anys on this line!" content="        try:" number="643" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            existing_topics = self._admin_client.list_topics()" number="644" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Omitted Generics (x3)" content="            deletable_topics = list()" number="645" precision="any"/><line any_info="No Anys on this line!" content="" number="646" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._data_topic_name in existing_topics:" number="647" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                deletable_topics.append(self._data_topic_name)" number="648" precision="any"/><line any_info="No Anys on this line!" content="" number="649" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._writer_status_topic_name in existing_topics:" number="650" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                deletable_topics.append(self._writer_status_topic_name)" number="651" precision="any"/><line any_info="No Anys on this line!" content="" number="652" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if self._reader_status_topic_name in existing_topics:" number="653" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                deletable_topics.append(self._reader_status_topic_name)" number="654" precision="any"/><line any_info="No Anys on this line!" content="" number="655" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            if 0 &lt; len(deletable_topics):" number="656" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                self._admin_client.delete_topics(topics=deletable_topics)" number="657" precision="any"/><line any_info="No Anys on this line!" content="" number="658" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if self._admin_client is not None:" number="659" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self._admin_client.close()" number="660" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                self._admin_client = None" number="661" precision="any"/><line any_info="No Anys on this line!" content="" number="662" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="663" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x2)&#10;Unannotated (x1)" content="        except (NoBrokersAvailable, NodeNotReadyError) as e:" number="664" precision="any"/><line any_info="No Anys on this line!" content="            # These might be transient errors, if Kafka is overloaded, so retry makes sense" number="665" precision="empty"/><line any_info="No Anys on this line!" content="            # TODO - implement timeout mechanism?" number="666" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            self._logger.warn(e)" number="667" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="668" precision="any"/><line any_info="No Anys on this line!" content="" number="669" precision="empty"/><line any_info="No Anys on this line!" content="    def get_consumer_lag(self) -&gt; int:" number="670" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x5)" content="        end_offsets = self._data_consumer.end_offsets([self._target_partition])" number="671" precision="any"/><line any_info="No Anys on this line!" content="" number="672" precision="empty"/><line any_info="No Anys on this line!" content="        overall_lag = 0" number="673" precision="precise"/><line any_info="Any Types on this line: &#10;Unimported (x4)" content="        for topic_partition in end_offsets.keys():" number="674" precision="any"/><line any_info="Any Types on this line: &#10;Unimported (x8)" content="            overall_lag += (end_offsets[topic_partition] - self._data_consumer.position(topic_partition))" number="675" precision="any"/><line any_info="No Anys on this line!" content="" number="676" precision="empty"/><line any_info="No Anys on this line!" content="        return overall_lag" number="677" precision="precise"/></mypy-report-file>